{"pageProps":{"post":{"title":"Flutter에서 백그라운드 서비스와 포어그라운드 서비스 사용 방법","description":"","date":"2024-06-21 22:36","slug":"2024-06-21-BackgroundandForegroundservicesinFlutter","content":"\n![그림](/assets/img/2024-06-21-BackgroundandForegroundservicesinFlutter_0.png)\n\n플러터의 백그라운드 및 포그라운드 서비스를 사용하면 앱이 활발히 실행되거나 활성화되어 있지 않을 때에도 백그라운드에서 작업을 수행할 수 있습니다. 이는 음악 재생, 인터넷에서 데이터 가져오기, 또는 사용자 경험을 방해하지 않고 장기간 실행되는 계산과 같은 작업을 포함합니다.\n\n패키지 추가: Flutter Background Service 문서 읽기를 클릭\n\n```js\n  flutter_background_service: 5.0.2\n  flutter_background_service_android: 6.1.0\n  flutter_background_service_ios: ^5.0.0\n```\n\n<div class=\"content-ad\"></div>\n\n매니페스트에 다음 항목 추가해주세요.\n\n```js\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\"/>\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE_DATA_SYNC\"/>\n\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\"/>\n```\n\n애플리케이션 태그 안에 다음을 추가해주세요.\n\n```js\n<service\n    android:name=\"id.flutter.flutter_background_service.BackgroundService\"\n    android:foregroundServiceType=\"location\"\n/>\n\n<service\n    android:enabled=\"true\"\n    android:exported=\"true\"\n    android:name=\".BackgroundService\"\n    android:stopWithTask=\"false\"\n/>\n\n<receiver\n    android:name=\".WatchdogReceiver\"\n    android:enabled=\"true\"\n    android:exported=\"true\"\n/>\n\n<receiver\n    android:name=\".BootReceiver\"\n    android:enabled=\"true\"\n    android:exported=\"true\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.BOOT_COMPLETED\"/>\n        <action android:name=\"android.intent.action.QUICKBOOT_POWERON\"/>\n    </intent-filter>\n</receiver>\n```\n\n<div class=\"content-ad\"></div>\n\n다음은 main.dart에서 사용하세요:\n\n```js\nFuture<void> main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  await initializeService();\n  runApp(const MyApp());\n}\n```\n\n```js\n/// Foreground 및 Background\nFuture<void> initializeService() async {\n  final service = FlutterBackgroundService();\n\n  await service.configure(\n    androidConfiguration: AndroidConfiguration(\n      onStart: onStart,\n      autoStart: false,\n      isForegroundMode: true,\n      // notificationChannelId: 'my_foreground',\n      // initialNotificationContent: 'running',\n      foregroundServiceNotificationId: 888,\n    ),\n    iosConfiguration: IosConfiguration(\n      autoStart: true,\n      onForeground: onStart,\n      onBackground: onIosBackground,\n    ),\n  );\n}\n```\n\nIOS용:\n\n<div class=\"content-ad\"></div>\n\n```js\n@pragma('vm:entry-point')\nFuture<bool> onIosBackground(ServiceInstance service) async {\n  WidgetsFlutterBinding.ensureInitialized();\n  DartPluginRegistrant.ensureInitialized();\n  return true;\n}\n```\n\nAndroid용:\n\n```js\n@pragma('vm:entry-point')\nvoid onStart(ServiceInstance service) async {\n  DartPluginRegistrant.ensureInitialized();\n  if (service is AndroidServiceInstance) {\n    service.on('setAsForeground').listen((event) {\n      service.setAsForegroundService();\n    });\n    service.on('setAsBackground').listen((event) {\n      service.setAsBackgroundService();\n    });\n  }\n  service.on('stopService').listen((event) {\n    service.stopSelf();\n  });\n\n  final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =\n      FlutterLocalNotificationsPlugin();\n\n  // // bring to foreground\n  Timer.periodic(const Duration(seconds: 1), (timer) async {\n    if (service is AndroidServiceInstance) {\n      if (await service.isForegroundService()) {\n        flutterLocalNotificationsPlugin.show(\n          0, 'This is foreground', '${DateTime.now()}',\n          const NotificationDetails(\n            android: AndroidNotificationDetails(\n              \"notificationChannelId\",\n              'MY FOREGROUND SERVICE',\n              icon: 'ic_bg_service_small',\n              ongoing: true,\n            ),\n          ),\n        );\n      }\n    }\n  });\n}\n```\n\n이 메서드는 어디서든 사용할 수 있습니다:\n\n<div class=\"content-ad\"></div>\n\n```js\nvoid backgroundService()async{\n  final service = FlutterBackgroundService();\n  var isRunning = await service.isRunning();\n  if (isRunning) {\n    Timer.periodic(const Duration(seconds: 1), (timer) async {\n      if (mounted) {\n        setState(() {\n          debugPrint(\"runningSanjay\");\n          CustomLoader.message(\"runningSanjay\");\n        });\n      }\n    });\n  } else {\n    service.startService();\n  }\n  setState(() {});\n}\n```\n\n전체 코드:\n\n```js\nimport 'dart:async';\nimport 'dart:convert';\nimport 'dart:io';\nimport 'dart:ui';\nimport 'package:flutter_background_service/flutter_background_service.dart';\nimport 'package:flutter_background_service_android/flutter_background_service_android.dart';\n\nFuture<void> main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n  await initializeService();\n  runApp(const MyApp());\n}\n\n/// Foreground and Background\nFuture<void> initializeService() async {\n  final service = FlutterBackgroundService();\n  await service.configure(\n    androidConfiguration: AndroidConfiguration(\n      onStart: onStart,\n      autoStart: false,\n      isForegroundMode: true,\n      // notificationChannelId: 'my_foreground',\n      // initialNotificationContent: 'running',\n      foregroundServiceNotificationId: 888,\n    ),\n    iosConfiguration: IosConfiguration(\n      autoStart: true,\n      onForeground: onStart,\n      onBackground: onIosBackground,\n    ),\n  );\n}\n\n@pragma('vm:entry-point')\nFuture<bool> onIosBackground(ServiceInstance service) async {\n  WidgetsFlutterBinding.ensureInitialized();\n  DartPluginRegistrant.ensureInitialized();\n  return true;\n}\n\n@pragma('vm:entry-point')\nvoid onStart(ServiceInstance service) async {\n  DartPluginRegistrant.ensureInitialized();\n  if (service is AndroidServiceInstance) {\n    service.on('setAsForeground').listen((event) {\n      service.setAsForegroundService();\n    });\n    service.on('setAsBackground').listen((event) {\n      service.setAsBackgroundService();\n    });\n  }\n  service.on('stopService').listen((event) {\n    service.stopSelf();\n  });\n\n  final FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =\n  FlutterLocalNotificationsPlugin();\n  // bring to foreground\n  Timer.periodic(const Duration(seconds: 1), (timer) async {\n    if (service is AndroidServiceInstance) {\n      if (await service.isForegroundService()) {\n        CustomLoader.message(\"foreground\");\n        flutterLocalNotificationsPlugin.show(\n          0, 'COOL SERVICE', 'Awesome ${DateTime.now()}',\n          const NotificationDetails(\n            android: AndroidNotificationDetails(\n              \"notificationChannelId\",\n              'MY FOREGROUND SERVICE',\n              icon: 'ic_bg_service_small',\n              ongoing: true,\n            ),\n          ),\n        );\n      }\n    }\n  });\n}\n\nclass MyApp extends StatefulWidget {\n  const MyApp({Key key}) : super(key: key);\n  @override\n  State<MyApp> createState() => _MyAppState();\n}\n\nclass _MyAppState extends State<MyApp>{\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      debugShowCheckedModeBanner: false,\n      theme: ThemeData(\n          scaffoldBackgroundColor: Colors.white,\n          inputDecorationTheme: const InputDecorationTheme(\n            focusedBorder: UnderlineInputBorder(\n                borderSide: BorderSide(color: Colors.blue)\n            ),\n          )),\n      home:  Container(\n        color: Colors.white,\n        child:  Center(\n            child: Text(\"This is foreground service app\"),\n        ),\n      ),\n    );\n  }\n}\n```\n\n<img src=\"/assets/img/2024-06-21-BackgroundandForegroundservicesinFlutter_1.png\" />\n\n<div class=\"content-ad\"></div>\n\n이 기사를 즐겁게 읽으셨기를 바랍니다! 제공된 정보를 감사히 여기신다면 'Buy Me A Coffee'로 저를 지원할 수 있습니다! 여러분의 제스처에 감사드립니다!\n","ogImage":{"url":"/assets/img/2024-06-21-BackgroundandForegroundservicesinFlutter_0.png"},"coverImage":"/assets/img/2024-06-21-BackgroundandForegroundservicesinFlutter_0.png","tag":["Tech"],"readingTime":8},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-21-BackgroundandForegroundservicesinFlutter_0.png\" alt=\"그림\"></p>\n<p>플러터의 백그라운드 및 포그라운드 서비스를 사용하면 앱이 활발히 실행되거나 활성화되어 있지 않을 때에도 백그라운드에서 작업을 수행할 수 있습니다. 이는 음악 재생, 인터넷에서 데이터 가져오기, 또는 사용자 경험을 방해하지 않고 장기간 실행되는 계산과 같은 작업을 포함합니다.</p>\n<p>패키지 추가: Flutter Background Service 문서 읽기를 클릭</p>\n<pre><code class=\"hljs language-js\">  <span class=\"hljs-attr\">flutter_background_service</span>: <span class=\"hljs-number\">5.0</span><span class=\"hljs-number\">.2</span>\n  <span class=\"hljs-attr\">flutter_background_service_android</span>: <span class=\"hljs-number\">6.1</span><span class=\"hljs-number\">.0</span>\n  <span class=\"hljs-attr\">flutter_background_service_ios</span>: ^<span class=\"hljs-number\">5.0</span><span class=\"hljs-number\">.0</span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>매니페스트에 다음 항목 추가해주세요.</p>\n<pre><code class=\"hljs language-js\">    &#x3C;uses-permission <span class=\"hljs-attr\">android</span>:name=<span class=\"hljs-string\">\"android.permission.FOREGROUND_SERVICE\"</span>/>\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.permission.FOREGROUND_SERVICE_LOCATION\"</span>/></span></span>\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.permission.FOREGROUND_SERVICE_DATA_SYNC\"</span>/></span></span>\n\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.permission.RECEIVE_BOOT_COMPLETED\"</span>/></span></span>\n    <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">uses-permission</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.permission.WAKE_LOCK\"</span>/></span></span>\n</code></pre>\n<p>애플리케이션 태그 안에 다음을 추가해주세요.</p>\n<pre><code class=\"hljs language-js\">&#x3C;service\n    <span class=\"hljs-attr\">android</span>:name=<span class=\"hljs-string\">\"id.flutter.flutter_background_service.BackgroundService\"</span>\n    <span class=\"hljs-attr\">android</span>:foregroundServiceType=<span class=\"hljs-string\">\"location\"</span>\n/>\n\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">service</span>\n    <span class=\"hljs-attr\">android:enabled</span>=<span class=\"hljs-string\">\"true\"</span>\n    <span class=\"hljs-attr\">android:exported</span>=<span class=\"hljs-string\">\"true\"</span>\n    <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\".BackgroundService\"</span>\n    <span class=\"hljs-attr\">android:stopWithTask</span>=<span class=\"hljs-string\">\"false\"</span>\n/></span></span>\n\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">receiver</span>\n    <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\".WatchdogReceiver\"</span>\n    <span class=\"hljs-attr\">android:enabled</span>=<span class=\"hljs-string\">\"true\"</span>\n    <span class=\"hljs-attr\">android:exported</span>=<span class=\"hljs-string\">\"true\"</span>\n/></span></span>\n\n<span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">receiver</span>\n    <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\".BootReceiver\"</span>\n    <span class=\"hljs-attr\">android:enabled</span>=<span class=\"hljs-string\">\"true\"</span>\n    <span class=\"hljs-attr\">android:exported</span>=<span class=\"hljs-string\">\"true\"</span>></span>\n    <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">intent-filter</span>></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.intent.action.BOOT_COMPLETED\"</span>/></span>\n        <span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">action</span> <span class=\"hljs-attr\">android:name</span>=<span class=\"hljs-string\">\"android.intent.action.QUICKBOOT_POWERON\"</span>/></span>\n    <span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">intent-filter</span>></span>\n<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">receiver</span>></span></span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>다음은 main.dart에서 사용하세요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">Future</span>&#x3C;<span class=\"hljs-keyword\">void</span>> <span class=\"hljs-title function_\">main</span>() <span class=\"hljs-keyword\">async</span> {\n  <span class=\"hljs-title class_\">WidgetsFlutterBinding</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">initializeService</span>();\n  <span class=\"hljs-title function_\">runApp</span>(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyApp</span>());\n}\n</code></pre>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">/// Foreground 및 Background</span>\n<span class=\"hljs-title class_\">Future</span>&#x3C;<span class=\"hljs-keyword\">void</span>> <span class=\"hljs-title function_\">initializeService</span>() <span class=\"hljs-keyword\">async</span> {\n  final service = <span class=\"hljs-title class_\">FlutterBackgroundService</span>();\n\n  <span class=\"hljs-keyword\">await</span> service.<span class=\"hljs-title function_\">configure</span>(\n    <span class=\"hljs-attr\">androidConfiguration</span>: <span class=\"hljs-title class_\">AndroidConfiguration</span>(\n      <span class=\"hljs-attr\">onStart</span>: onStart,\n      <span class=\"hljs-attr\">autoStart</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">isForegroundMode</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-comment\">// notificationChannelId: 'my_foreground',</span>\n      <span class=\"hljs-comment\">// initialNotificationContent: 'running',</span>\n      <span class=\"hljs-attr\">foregroundServiceNotificationId</span>: <span class=\"hljs-number\">888</span>,\n    ),\n    <span class=\"hljs-attr\">iosConfiguration</span>: <span class=\"hljs-title class_\">IosConfiguration</span>(\n      <span class=\"hljs-attr\">autoStart</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">onForeground</span>: onStart,\n      <span class=\"hljs-attr\">onBackground</span>: onIosBackground,\n    ),\n  );\n}\n</code></pre>\n<p>IOS용:</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\">@<span class=\"hljs-title function_\">pragma</span>(<span class=\"hljs-string\">'vm:entry-point'</span>)\n<span class=\"hljs-title class_\">Future</span>&#x3C;bool> <span class=\"hljs-title function_\">onIosBackground</span>(<span class=\"hljs-title class_\">ServiceInstance</span> service) <span class=\"hljs-keyword\">async</span> {\n  <span class=\"hljs-title class_\">WidgetsFlutterBinding</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-title class_\">DartPluginRegistrant</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n}\n</code></pre>\n<p>Android용:</p>\n<pre><code class=\"hljs language-js\">@<span class=\"hljs-title function_\">pragma</span>(<span class=\"hljs-string\">'vm:entry-point'</span>)\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">onStart</span>(<span class=\"hljs-title class_\">ServiceInstance</span> service) <span class=\"hljs-keyword\">async</span> {\n  <span class=\"hljs-title class_\">DartPluginRegistrant</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-keyword\">if</span> (service is <span class=\"hljs-title class_\">AndroidServiceInstance</span>) {\n    service.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">'setAsForeground'</span>).<span class=\"hljs-title function_\">listen</span>((event) {\n      service.<span class=\"hljs-title function_\">setAsForegroundService</span>();\n    });\n    service.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">'setAsBackground'</span>).<span class=\"hljs-title function_\">listen</span>((event) {\n      service.<span class=\"hljs-title function_\">setAsBackgroundService</span>();\n    });\n  }\n  service.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">'stopService'</span>).<span class=\"hljs-title function_\">listen</span>((event) {\n    service.<span class=\"hljs-title function_\">stopSelf</span>();\n  });\n\n  final <span class=\"hljs-title class_\">FlutterLocalNotificationsPlugin</span> flutterLocalNotificationsPlugin =\n      <span class=\"hljs-title class_\">FlutterLocalNotificationsPlugin</span>();\n\n  <span class=\"hljs-comment\">// // bring to foreground</span>\n  <span class=\"hljs-title class_\">Timer</span>.<span class=\"hljs-title function_\">periodic</span>(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Duration</span>(<span class=\"hljs-attr\">seconds</span>: <span class=\"hljs-number\">1</span>), (timer) <span class=\"hljs-keyword\">async</span> {\n    <span class=\"hljs-keyword\">if</span> (service is <span class=\"hljs-title class_\">AndroidServiceInstance</span>) {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">await</span> service.<span class=\"hljs-title function_\">isForegroundService</span>()) {\n        flutterLocalNotificationsPlugin.<span class=\"hljs-title function_\">show</span>(\n          <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'This is foreground'</span>, <span class=\"hljs-string\">'${DateTime.now()}'</span>,\n          <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">NotificationDetails</span>(\n            <span class=\"hljs-attr\">android</span>: <span class=\"hljs-title class_\">AndroidNotificationDetails</span>(\n              <span class=\"hljs-string\">\"notificationChannelId\"</span>,\n              <span class=\"hljs-string\">'MY FOREGROUND SERVICE'</span>,\n              <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\">'ic_bg_service_small'</span>,\n              <span class=\"hljs-attr\">ongoing</span>: <span class=\"hljs-literal\">true</span>,\n            ),\n          ),\n        );\n      }\n    }\n  });\n}\n</code></pre>\n<p>이 메서드는 어디서든 사용할 수 있습니다:</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">backgroundService</span>()<span class=\"hljs-keyword\">async</span>{\n  final service = <span class=\"hljs-title class_\">FlutterBackgroundService</span>();\n  <span class=\"hljs-keyword\">var</span> isRunning = <span class=\"hljs-keyword\">await</span> service.<span class=\"hljs-title function_\">isRunning</span>();\n  <span class=\"hljs-keyword\">if</span> (isRunning) {\n    <span class=\"hljs-title class_\">Timer</span>.<span class=\"hljs-title function_\">periodic</span>(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Duration</span>(<span class=\"hljs-attr\">seconds</span>: <span class=\"hljs-number\">1</span>), (timer) <span class=\"hljs-keyword\">async</span> {\n      <span class=\"hljs-keyword\">if</span> (mounted) {\n        <span class=\"hljs-title function_\">setState</span>(() {\n          <span class=\"hljs-title function_\">debugPrint</span>(<span class=\"hljs-string\">\"runningSanjay\"</span>);\n          <span class=\"hljs-title class_\">CustomLoader</span>.<span class=\"hljs-title function_\">message</span>(<span class=\"hljs-string\">\"runningSanjay\"</span>);\n        });\n      }\n    });\n  } <span class=\"hljs-keyword\">else</span> {\n    service.<span class=\"hljs-title function_\">startService</span>();\n  }\n  <span class=\"hljs-title function_\">setState</span>(() {});\n}\n</code></pre>\n<p>전체 코드:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:async'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:convert'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:io'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:ui'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter_background_service/flutter_background_service.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter_background_service_android/flutter_background_service_android.dart'</span>;\n\n<span class=\"hljs-title class_\">Future</span>&#x3C;<span class=\"hljs-keyword\">void</span>> <span class=\"hljs-title function_\">main</span>() <span class=\"hljs-keyword\">async</span> {\n  <span class=\"hljs-title class_\">WidgetsFlutterBinding</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">initializeService</span>();\n  <span class=\"hljs-title function_\">runApp</span>(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyApp</span>());\n}\n\n<span class=\"hljs-comment\">/// Foreground and Background</span>\n<span class=\"hljs-title class_\">Future</span>&#x3C;<span class=\"hljs-keyword\">void</span>> <span class=\"hljs-title function_\">initializeService</span>() <span class=\"hljs-keyword\">async</span> {\n  final service = <span class=\"hljs-title class_\">FlutterBackgroundService</span>();\n  <span class=\"hljs-keyword\">await</span> service.<span class=\"hljs-title function_\">configure</span>(\n    <span class=\"hljs-attr\">androidConfiguration</span>: <span class=\"hljs-title class_\">AndroidConfiguration</span>(\n      <span class=\"hljs-attr\">onStart</span>: onStart,\n      <span class=\"hljs-attr\">autoStart</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">isForegroundMode</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-comment\">// notificationChannelId: 'my_foreground',</span>\n      <span class=\"hljs-comment\">// initialNotificationContent: 'running',</span>\n      <span class=\"hljs-attr\">foregroundServiceNotificationId</span>: <span class=\"hljs-number\">888</span>,\n    ),\n    <span class=\"hljs-attr\">iosConfiguration</span>: <span class=\"hljs-title class_\">IosConfiguration</span>(\n      <span class=\"hljs-attr\">autoStart</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">onForeground</span>: onStart,\n      <span class=\"hljs-attr\">onBackground</span>: onIosBackground,\n    ),\n  );\n}\n\n@<span class=\"hljs-title function_\">pragma</span>(<span class=\"hljs-string\">'vm:entry-point'</span>)\n<span class=\"hljs-title class_\">Future</span>&#x3C;bool> <span class=\"hljs-title function_\">onIosBackground</span>(<span class=\"hljs-title class_\">ServiceInstance</span> service) <span class=\"hljs-keyword\">async</span> {\n  <span class=\"hljs-title class_\">WidgetsFlutterBinding</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-title class_\">DartPluginRegistrant</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n}\n\n@<span class=\"hljs-title function_\">pragma</span>(<span class=\"hljs-string\">'vm:entry-point'</span>)\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">onStart</span>(<span class=\"hljs-title class_\">ServiceInstance</span> service) <span class=\"hljs-keyword\">async</span> {\n  <span class=\"hljs-title class_\">DartPluginRegistrant</span>.<span class=\"hljs-title function_\">ensureInitialized</span>();\n  <span class=\"hljs-keyword\">if</span> (service is <span class=\"hljs-title class_\">AndroidServiceInstance</span>) {\n    service.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">'setAsForeground'</span>).<span class=\"hljs-title function_\">listen</span>((event) {\n      service.<span class=\"hljs-title function_\">setAsForegroundService</span>();\n    });\n    service.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">'setAsBackground'</span>).<span class=\"hljs-title function_\">listen</span>((event) {\n      service.<span class=\"hljs-title function_\">setAsBackgroundService</span>();\n    });\n  }\n  service.<span class=\"hljs-title function_\">on</span>(<span class=\"hljs-string\">'stopService'</span>).<span class=\"hljs-title function_\">listen</span>((event) {\n    service.<span class=\"hljs-title function_\">stopSelf</span>();\n  });\n\n  final <span class=\"hljs-title class_\">FlutterLocalNotificationsPlugin</span> flutterLocalNotificationsPlugin =\n  <span class=\"hljs-title class_\">FlutterLocalNotificationsPlugin</span>();\n  <span class=\"hljs-comment\">// bring to foreground</span>\n  <span class=\"hljs-title class_\">Timer</span>.<span class=\"hljs-title function_\">periodic</span>(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Duration</span>(<span class=\"hljs-attr\">seconds</span>: <span class=\"hljs-number\">1</span>), (timer) <span class=\"hljs-keyword\">async</span> {\n    <span class=\"hljs-keyword\">if</span> (service is <span class=\"hljs-title class_\">AndroidServiceInstance</span>) {\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">await</span> service.<span class=\"hljs-title function_\">isForegroundService</span>()) {\n        <span class=\"hljs-title class_\">CustomLoader</span>.<span class=\"hljs-title function_\">message</span>(<span class=\"hljs-string\">\"foreground\"</span>);\n        flutterLocalNotificationsPlugin.<span class=\"hljs-title function_\">show</span>(\n          <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'COOL SERVICE'</span>, <span class=\"hljs-string\">'Awesome ${DateTime.now()}'</span>,\n          <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">NotificationDetails</span>(\n            <span class=\"hljs-attr\">android</span>: <span class=\"hljs-title class_\">AndroidNotificationDetails</span>(\n              <span class=\"hljs-string\">\"notificationChannelId\"</span>,\n              <span class=\"hljs-string\">'MY FOREGROUND SERVICE'</span>,\n              <span class=\"hljs-attr\">icon</span>: <span class=\"hljs-string\">'ic_bg_service_small'</span>,\n              <span class=\"hljs-attr\">ongoing</span>: <span class=\"hljs-literal\">true</span>,\n            ),\n          ),\n        );\n      }\n    }\n  });\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyApp</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">StatefulWidget</span> {\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyApp</span>({<span class=\"hljs-title class_\">Key</span> key}) : <span class=\"hljs-variable language_\">super</span>(<span class=\"hljs-attr\">key</span>: key);\n  @override\n  <span class=\"hljs-title class_\">State</span>&#x3C;<span class=\"hljs-title class_\">MyApp</span>> <span class=\"hljs-title function_\">createState</span>() => <span class=\"hljs-title function_\">_MyAppState</span>();\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">_MyAppState</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">State</span>&#x3C;<span class=\"hljs-title class_\">MyApp</span>>{\n  @override\n  <span class=\"hljs-title class_\">Widget</span> <span class=\"hljs-title function_\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">MaterialApp</span>(\n      <span class=\"hljs-attr\">debugShowCheckedModeBanner</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">theme</span>: <span class=\"hljs-title class_\">ThemeData</span>(\n          <span class=\"hljs-attr\">scaffoldBackgroundColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">white</span>,\n          <span class=\"hljs-attr\">inputDecorationTheme</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">InputDecorationTheme</span>(\n            <span class=\"hljs-attr\">focusedBorder</span>: <span class=\"hljs-title class_\">UnderlineInputBorder</span>(\n                <span class=\"hljs-attr\">borderSide</span>: <span class=\"hljs-title class_\">BorderSide</span>(<span class=\"hljs-attr\">color</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">blue</span>)\n            ),\n          )),\n      <span class=\"hljs-attr\">home</span>:  <span class=\"hljs-title class_\">Container</span>(\n        <span class=\"hljs-attr\">color</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">white</span>,\n        <span class=\"hljs-attr\">child</span>:  <span class=\"hljs-title class_\">Center</span>(\n            <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"This is foreground service app\"</span>),\n        ),\n      ),\n    );\n  }\n}\n</code></pre>\n<img src=\"/assets/img/2024-06-21-BackgroundandForegroundservicesinFlutter_1.png\">\n<div class=\"content-ad\"></div>\n<p>이 기사를 즐겁게 읽으셨기를 바랍니다! 제공된 정보를 감사히 여기신다면 'Buy Me A Coffee'로 저를 지원할 수 있습니다! 여러분의 제스처에 감사드립니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}