{"pageProps":{"post":{"title":"iOS와 Android에서 QR 코드를 스캔하는 방법 Flutter 사용하기","description":"","date":"2024-06-22 15:41","slug":"2024-06-22-ScanningQRCodeinFlutteroniOSandAndroid","content":"\n## 플러터 앱에서 QR 코드 스캔 기능을 구현하는 방법을 배워보세요\n\n![QR 코드 스캔](/assets/img/2024-06-22-ScanningQRCodeinFlutteroniOSandAndroid_0.png)\n\n플러터는 구글의 오픈 소스 UI 툴킷으로, 시각적으로 매력적이고 고성능의 크로스 플랫폼 애플리케이션을 만들 수 있는 능력으로 개발자들 사이에서 엄청난 인기를 얻었습니다. 이 글에서는 플러터에서 QR 코드 스캐너를 구현하는 과정을 자세히 살펴보겠습니다. 이를 통해 앱 사용자들이 자신의 디바이스 카메라를 사용하여 QR 코드를 쉽게 스캔할 수 있게 됩니다.\n\n이 튜토리얼을 완료하면 애플리케이션에 QR 코드 스캔 기능을 통합하는 방법에 대해 확실한 이해를 가지게 될 것입니다.\n\n<div class=\"content-ad\"></div>\n\n시작해 봅시다.\n\n## 1. 프로젝트 설정\n\n먼저 아래 명령어를 사용하여 시작하는 Flutter 프로젝트를 생성해야 합니다. qr_code_scanner를 앱 이름으로 바꿔주세요.\n\n```js\nflutter create qr_code_scanner\n```\n\n<div class=\"content-ad\"></div>\n\n위 내용은 친절하고 쉬운 어조로 한국어로 번역하면 다음과 같습니다.\n\n당신을 위해 기본 카운터 앱을 만들어 드릴 거에요. 프로젝트 폴더 내에서 다음 명령어를 실행하여 mobile_scanner 플러그인을 프로젝트에 추가해 보세요.\n\n```js\nflutter pub add mobile_scanner\n```\n\n이제 작동하도록 이를 위해 일부 플랫폼 설정을 해야 합니다.\n\n## - Android\n\n<div class=\"content-ad\"></div>\n\n안녕하세요! 안드로이드 `app` 폴더의 build.gradle 파일로 이동해서 minSdkVersion을 21로 업데이트해주세요.\n\n```js\ndefaultConfig {\n    applicationId \"com.example.qr_code_scanner\"\n    minSdkVersion 21\n    targetSdkVersion flutter.targetSdkVersion\n    versionCode flutterVersionCode.toInteger()\n    versionName flutterVersionName\n}\n```\n\n## - iOS\n\nios`Runner` 폴더의 info.plist 파일로 이동해서 아래 두 가지 키를 추가해주세요.\n\n<div class=\"content-ad\"></div>\n\n```yaml\n<key>NSCameraUsageDescription</key>\n<string>QR 코드 스캐너는 QR 코드를 스캔하기 위해 카메라 액세스가 필요합니다</string>\n\n<key>NSPhotoLibraryUsageDescription</key>\n<string>QR 코드 스캐너는 사진 액세스가 필요합니다. 사진 라이브러리에서 QR 코드를 가져오기 위함입니다</string>\n```\n\n## 2. 코딩 시작하기\n\n이제 QR 코드 스캐너를 만들 준비가 되었습니다. 아래 코드를 추가해주세요\n\nmobile_scanner를 main.dart 파일에 import 해주세요\n\n<div class=\"content-ad\"></div>\n\n```js\nimport \"package:mobile_scanner/mobile_scanner.dart\";\n```\n\n```js\n// 스캐너 추가하기\nMobileScanner(\n  onDetect: (capture) {\n    final List<Barcode> barcodes = capture.barcodes;\n    for (final barcode in barcodes) {\n      print(data);\n    }\n  },\n)\n```\n\n전체 코드:\n\n```js\nimport 'package:flutter/material.dart';\nimport 'package:mobile_scanner/mobile_scanner.dart';\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'QR 코드 스캐너',\n      theme: ThemeData(\n        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),\n        useMaterial3: true,\n      ),\n      home: const MyHomePage(title: 'QR 코드 스캐너'),\n    );\n  }\n}\n\nclass MyHomePage extends StatefulWidget {\n  const MyHomePage({super.key});\n\n  @override\n  State<MyHomePage> createState() => _MyHomePageState();\n}\n\nclass _MyHomePageState extends State<MyHomePage> {\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('QR 코드 스캐너')),\n      body: SizedBox(\n        height: 400,\n        child: MobileScanner(onDetect: (capture) {\n          final List<Barcode> barcodes = capture.barcodes;\n          for (final barcode in barcodes) {\n            print(barcode.rawValue ?? \"QR 코드에 데이터를 찾을 수 없음\");\n          }\n        }),\n      ),\n    );\n  }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n그럼 이제 앱에 QR 코드 스캔 기능을 추가했군요.\n\n자세한 내용을 원하시면, 이 프로젝트에 대한 내 Github 저장소를 확인해보세요.\n\n이 글을 통해 얻은 지식으로 플러터 앱에 QR 코드 스캐너를 구현하는 데 잘 대비되셨습니다. 그래서 이제 프로젝트에 이 기능을 통합해보세요. 즐거운 코딩되세요!\n\n이 글을 읽어주셔서 감사합니다 ❤\n뭔가 잘못된 점이 있나요? 댓글로 알려주세요. 개선해 드릴게요.\n\n<div class=\"content-ad\"></div>\n\n만약 이 기사가 도움이 되었다면 👏 박수를 치세요!\n","ogImage":{"url":"/assets/img/2024-06-22-ScanningQRCodeinFlutteroniOSandAndroid_0.png"},"coverImage":"/assets/img/2024-06-22-ScanningQRCodeinFlutteroniOSandAndroid_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h2>플러터 앱에서 QR 코드 스캔 기능을 구현하는 방법을 배워보세요</h2>\n<p><img src=\"/assets/img/2024-06-22-ScanningQRCodeinFlutteroniOSandAndroid_0.png\" alt=\"QR 코드 스캔\"></p>\n<p>플러터는 구글의 오픈 소스 UI 툴킷으로, 시각적으로 매력적이고 고성능의 크로스 플랫폼 애플리케이션을 만들 수 있는 능력으로 개발자들 사이에서 엄청난 인기를 얻었습니다. 이 글에서는 플러터에서 QR 코드 스캐너를 구현하는 과정을 자세히 살펴보겠습니다. 이를 통해 앱 사용자들이 자신의 디바이스 카메라를 사용하여 QR 코드를 쉽게 스캔할 수 있게 됩니다.</p>\n<p>이 튜토리얼을 완료하면 애플리케이션에 QR 코드 스캔 기능을 통합하는 방법에 대해 확실한 이해를 가지게 될 것입니다.</p>\n<div class=\"content-ad\"></div>\n<p>시작해 봅시다.</p>\n<h2>1. 프로젝트 설정</h2>\n<p>먼저 아래 명령어를 사용하여 시작하는 Flutter 프로젝트를 생성해야 합니다. qr_code_scanner를 앱 이름으로 바꿔주세요.</p>\n<pre><code class=\"hljs language-js\">flutter create qr_code_scanner\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>위 내용은 친절하고 쉬운 어조로 한국어로 번역하면 다음과 같습니다.</p>\n<p>당신을 위해 기본 카운터 앱을 만들어 드릴 거에요. 프로젝트 폴더 내에서 다음 명령어를 실행하여 mobile_scanner 플러그인을 프로젝트에 추가해 보세요.</p>\n<pre><code class=\"hljs language-js\">flutter pub add mobile_scanner\n</code></pre>\n<p>이제 작동하도록 이를 위해 일부 플랫폼 설정을 해야 합니다.</p>\n<h2>- Android</h2>\n<div class=\"content-ad\"></div>\n<p>안녕하세요! 안드로이드 <code>app</code> 폴더의 build.gradle 파일로 이동해서 minSdkVersion을 21로 업데이트해주세요.</p>\n<pre><code class=\"hljs language-js\">defaultConfig {\n    applicationId <span class=\"hljs-string\">\"com.example.qr_code_scanner\"</span>\n    minSdkVersion <span class=\"hljs-number\">21</span>\n    targetSdkVersion flutter.<span class=\"hljs-property\">targetSdkVersion</span>\n    versionCode flutterVersionCode.<span class=\"hljs-title function_\">toInteger</span>()\n    versionName flutterVersionName\n}\n</code></pre>\n<h2>- iOS</h2>\n<p>ios<code>Runner</code> 폴더의 info.plist 파일로 이동해서 아래 두 가지 키를 추가해주세요.</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-string\">&#x3C;key>NSCameraUsageDescription&#x3C;/key></span>\n<span class=\"hljs-string\">&#x3C;string>QR</span> <span class=\"hljs-string\">코드</span> <span class=\"hljs-string\">스캐너는</span> <span class=\"hljs-string\">QR</span> <span class=\"hljs-string\">코드를</span> <span class=\"hljs-string\">스캔하기</span> <span class=\"hljs-string\">위해</span> <span class=\"hljs-string\">카메라</span> <span class=\"hljs-string\">액세스가</span> <span class=\"hljs-string\">필요합니다&#x3C;/string></span>\n\n<span class=\"hljs-string\">&#x3C;key>NSPhotoLibraryUsageDescription&#x3C;/key></span>\n<span class=\"hljs-string\">&#x3C;string>QR</span> <span class=\"hljs-string\">코드</span> <span class=\"hljs-string\">스캐너는</span> <span class=\"hljs-string\">사진</span> <span class=\"hljs-string\">액세스가</span> <span class=\"hljs-string\">필요합니다.</span> <span class=\"hljs-string\">사진</span> <span class=\"hljs-string\">라이브러리에서</span> <span class=\"hljs-string\">QR</span> <span class=\"hljs-string\">코드를</span> <span class=\"hljs-string\">가져오기</span> <span class=\"hljs-string\">위함입니다&#x3C;/string></span>\n</code></pre>\n<h2>2. 코딩 시작하기</h2>\n<p>이제 QR 코드 스캐너를 만들 준비가 되었습니다. 아래 코드를 추가해주세요</p>\n<p>mobile_scanner를 main.dart 파일에 import 해주세요</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"package:mobile_scanner/mobile_scanner.dart\"</span>;\n</code></pre>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// 스캐너 추가하기</span>\n<span class=\"hljs-title class_\">MobileScanner</span>(\n  <span class=\"hljs-attr\">onDetect</span>: (capture) {\n    final <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Barcode</span>> barcodes = capture.<span class=\"hljs-property\">barcodes</span>;\n    <span class=\"hljs-keyword\">for</span> (final barcode <span class=\"hljs-keyword\">in</span> barcodes) {\n      <span class=\"hljs-title function_\">print</span>(data);\n    }\n  },\n)\n</code></pre>\n<p>전체 코드:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter/material.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:mobile_scanner/mobile_scanner.dart'</span>;\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-title function_\">runApp</span>(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyApp</span>());\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyApp</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">StatelessWidget</span> {\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyApp</span>({<span class=\"hljs-variable language_\">super</span>.<span class=\"hljs-property\">key</span>});\n\n  @override\n  <span class=\"hljs-title class_\">Widget</span> <span class=\"hljs-title function_\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">MaterialApp</span>(\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'QR 코드 스캐너'</span>,\n      <span class=\"hljs-attr\">theme</span>: <span class=\"hljs-title class_\">ThemeData</span>(\n        <span class=\"hljs-attr\">colorScheme</span>: <span class=\"hljs-title class_\">ColorScheme</span>.<span class=\"hljs-title function_\">fromSeed</span>(<span class=\"hljs-attr\">seedColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">deepPurple</span>),\n        <span class=\"hljs-attr\">useMaterial3</span>: <span class=\"hljs-literal\">true</span>,\n      ),\n      <span class=\"hljs-attr\">home</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyHomePage</span>(<span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'QR 코드 스캐너'</span>),\n    );\n  }\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyHomePage</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">StatefulWidget</span> {\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyHomePage</span>({<span class=\"hljs-variable language_\">super</span>.<span class=\"hljs-property\">key</span>});\n\n  @override\n  <span class=\"hljs-title class_\">State</span>&#x3C;<span class=\"hljs-title class_\">MyHomePage</span>> <span class=\"hljs-title function_\">createState</span>() => <span class=\"hljs-title function_\">_MyHomePageState</span>();\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">_MyHomePageState</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">State</span>&#x3C;<span class=\"hljs-title class_\">MyHomePage</span>> {\n  @override\n  <span class=\"hljs-title class_\">Widget</span> <span class=\"hljs-title function_\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Scaffold</span>(\n      <span class=\"hljs-attr\">appBar</span>: <span class=\"hljs-title class_\">AppBar</span>(<span class=\"hljs-attr\">title</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">'QR 코드 스캐너'</span>)),\n      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">SizedBox</span>(\n        <span class=\"hljs-attr\">height</span>: <span class=\"hljs-number\">400</span>,\n        <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">MobileScanner</span>(<span class=\"hljs-attr\">onDetect</span>: (capture) {\n          final <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Barcode</span>> barcodes = capture.<span class=\"hljs-property\">barcodes</span>;\n          <span class=\"hljs-keyword\">for</span> (final barcode <span class=\"hljs-keyword\">in</span> barcodes) {\n            <span class=\"hljs-title function_\">print</span>(barcode.<span class=\"hljs-property\">rawValue</span> ?? <span class=\"hljs-string\">\"QR 코드에 데이터를 찾을 수 없음\"</span>);\n          }\n        }),\n      ),\n    );\n  }\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>그럼 이제 앱에 QR 코드 스캔 기능을 추가했군요.</p>\n<p>자세한 내용을 원하시면, 이 프로젝트에 대한 내 Github 저장소를 확인해보세요.</p>\n<p>이 글을 통해 얻은 지식으로 플러터 앱에 QR 코드 스캐너를 구현하는 데 잘 대비되셨습니다. 그래서 이제 프로젝트에 이 기능을 통합해보세요. 즐거운 코딩되세요!</p>\n<p>이 글을 읽어주셔서 감사합니다 ❤\n뭔가 잘못된 점이 있나요? 댓글로 알려주세요. 개선해 드릴게요.</p>\n<div class=\"content-ad\"></div>\n<p>만약 이 기사가 도움이 되었다면 👏 박수를 치세요!</p>\n</body>\n</html>\n"},"__N_SSG":true}