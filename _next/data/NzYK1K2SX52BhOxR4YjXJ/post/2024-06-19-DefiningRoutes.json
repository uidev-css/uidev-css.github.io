{"pageProps":{"post":{"title":"노선 정의하기","description":"","date":"2024-06-19 06:52","slug":"2024-06-19-DefiningRoutes","content":"\n# 루트 정의\n\n> 계속하기 전에 라우팅 기본 사항 페이지를 읽기를 권장합니다.\n\n이 페이지에서는 Next.js 어플리케이션에서 루트를 정의하고 구성하는 방법을 안내해 드립니다.\n\n## 루트 생성\n\n<div class=\"content-ad\"></div>\n\nNext.js(넥스트.제이에스)는 파일 시스템을 기반으로 하는 라우터를 사용합니다. 여기서 폴더는 경로를 정의하는 데 사용됩니다.\n\n각 폴더는 URL 세그먼트에 매핑되는 경로 세그먼트를 나타냅니다. 중첩 된 경로를 만들려면 서로에게 폴더를 중첩시킬 수 있습니다.\n\n이미지 파일\n![이미지](/assets/img2024-06-19-DefiningRoutes_0.png)\n\n특별한 page.js 파일을 사용하여 경로 세그먼트를 공개적으로 접근할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n\n![이미지](/assets/img2024-06-19-DefiningRoutes_1.png)\n\n이 예시에서 /dashboard/analytics URL 경로는 공개적으로 접근할 수 없습니다. 왜냐하면 해당 페이지에 대응하는 page.js 파일이 없기 때문입니다. 이 폴더는 컴포넌트, 스타일시트, 이미지 또는 다른 동료 파일을 저장하는 데 사용될 수 있습니다.\n\n> 참고: 특별한 파일에는 .js, .jsx 또는 .tsx 파일 확장자를 사용할 수 있습니다.\n\n## UI 생성\n\n\n<div class=\"content-ad\"></div>\n\n특별 파일 규칙을 사용하여 각 경로 세그먼트에 UI를 생성합니다. 가장 흔한 것은 경로에 고유한 UI를 보여주는 페이지이고, 여러 경로에서 공유되는 UI를 보여주는 레이아웃입니다.\n\n예를 들어, 첫 번째 페이지를 만들기 위해 앱 디렉토리 내에 page.js 파일을 추가하고 React 컴포넌트를 내보냅니다:\n\n```js\nexport default function Page() {\n  return <h1>안녕, Next.js!</h1>;\n}\n```\n","ogImage":{"url":"/assets/img/2024-06-19-DefiningRoutes_0.png"},"coverImage":"/assets/img/2024-06-19-DefiningRoutes_0.png","tag":["Tech"],"readingTime":1},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>루트 정의</h1>\n<blockquote>\n<p>계속하기 전에 라우팅 기본 사항 페이지를 읽기를 권장합니다.</p>\n</blockquote>\n<p>이 페이지에서는 Next.js 어플리케이션에서 루트를 정의하고 구성하는 방법을 안내해 드립니다.</p>\n<h2>루트 생성</h2>\n<div class=\"content-ad\"></div>\n<p>Next.js(넥스트.제이에스)는 파일 시스템을 기반으로 하는 라우터를 사용합니다. 여기서 폴더는 경로를 정의하는 데 사용됩니다.</p>\n<p>각 폴더는 URL 세그먼트에 매핑되는 경로 세그먼트를 나타냅니다. 중첩 된 경로를 만들려면 서로에게 폴더를 중첩시킬 수 있습니다.</p>\n<p>이미지 파일\n<img src=\"/assets/img2024-06-19-DefiningRoutes_0.png\" alt=\"이미지\"></p>\n<p>특별한 page.js 파일을 사용하여 경로 세그먼트를 공개적으로 접근할 수 있습니다.</p>\n<div class=\"content-ad\"></div>\n<p><img src=\"/assets/img2024-06-19-DefiningRoutes_1.png\" alt=\"이미지\"></p>\n<p>이 예시에서 /dashboard/analytics URL 경로는 공개적으로 접근할 수 없습니다. 왜냐하면 해당 페이지에 대응하는 page.js 파일이 없기 때문입니다. 이 폴더는 컴포넌트, 스타일시트, 이미지 또는 다른 동료 파일을 저장하는 데 사용될 수 있습니다.</p>\n<blockquote>\n<p>참고: 특별한 파일에는 .js, .jsx 또는 .tsx 파일 확장자를 사용할 수 있습니다.</p>\n</blockquote>\n<h2>UI 생성</h2>\n<div class=\"content-ad\"></div>\n<p>특별 파일 규칙을 사용하여 각 경로 세그먼트에 UI를 생성합니다. 가장 흔한 것은 경로에 고유한 UI를 보여주는 페이지이고, 여러 경로에서 공유되는 UI를 보여주는 레이아웃입니다.</p>\n<p>예를 들어, 첫 번째 페이지를 만들기 위해 앱 디렉토리 내에 page.js 파일을 추가하고 React 컴포넌트를 내보냅니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">Page</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&#x3C;<span class=\"hljs-name\">h1</span>></span>안녕, Next.js!<span class=\"hljs-tag\">&#x3C;/<span class=\"hljs-name\">h1</span>></span></span>;\n}\n</code></pre>\n</body>\n</html>\n"},"__N_SSG":true}