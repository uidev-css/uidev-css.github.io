{"pageProps":{"post":{"title":"GetX로 API 통합하기 Flutter를 이용한 쉬운 방법","description":"","date":"2024-06-22 04:13","slug":"2024-06-22-APIIntegrationusingGetXinflutter","content":"\n![APIIntegrationusingGetXinflutter](/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_0.png)\n\n플러터에서 API 통합은 앱과 외부 서비스 간의 데이터 통신을 활성화하여 동적이고 실시간이며 확장 가능한 기능을 제공하고 서로 다른 플랫폼 간에 일관된 경험을 제공하는 데 중요합니다.\n\nAPI 통합은 플러터 애플리케이션이 외부 서비스와 상호 작용하고 데이터를 검색하고 다양한 기능을 수행할 수 있도록 가능하게 합니다. 다음은 플러터 개발에서 API 통합이 중요하게 간주되는 몇 가지 이유입니다:\n\n- 데이터 검색: 대부분의 애플리케이션은 데이터베이스, 서버 또는 제3자 서비스와 같은 외부 소스에서 데이터를 필요로합니다. API 통합을 통해 플러터 앱이 이러한 데이터를 동적으로 가져와 표시하므로 사용자가 항상 최신 정보에 액세스할 수 있습니다.\n- 실시간 업데이트: API를 사용하면 클라이언트(플러터 앱)와 서버 간의 실시간 통신이 가능해집니다. 이는 메시징 앱, 협업 도구 또는 실시간 데이터 피드와 같은 실시간 업데이트가 필요한 애플리케이션에 중요합니다.\n- 오프라인 지원: API는 장치에 로컬로 정보를 캐싱하여 오프라인 데이터 액세스를 지원할 수 있도록 설계될 수 있습니다. 이는 일시적이거나 인터넷 연결이 없는 환경에서 기능해야 하는 애플리케이션에 중요합니다.\n- 보안: API는 종종 인증 메커니즘을 통합하여 특정 데이터에만 인가된 사용자만이 액세스하거나 특정 작업을 수행할 수 있도록합니다. 이는 응용프로그램 및 데이터의 보안 유지에 도움이 됩니다.\n\n<div class=\"content-ad\"></div>\n\n## Android Studio에 JsonToDart 플러그인 설치하기\n\n플러그인: [JsonToDart](https://plugins.jetbrains.com/plugin/12562-jsontodart-json-to-dart-)\n\n## HTTP 패키지 추가하기\n\nHTTP 요청을 하기 위해 pubspec.yaml 파일에 http 패키지를 추가하고 flutter pub get을 실행하세요.\n\n<div class=\"content-ad\"></div>\n\n## Getx 패키지 추가하기\n\nGetX는 플러터를 위한 가벼우면서 강력한 솔루션입니다. 높은 성능의 상태 관리, 지능적인 의존성 주입, 빠르고 실용적인 라우트 관리를 결합하고 있습니다. GetX를 사용하려면 flutter pub add get 명령어를 실행하세요.\n\n## main.dart 파일에 GetMaterialApp 추가하기\n\n```js\nimport 'package:flutter/material.dart';\nimport 'package:get/get.dart'; // Get 패키지 가져오기\nimport 'UserListScreens.dart'; // 화면 파일 import하기\n\nvoid main() {\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return GetMaterialApp(\n      debugShowCheckedModeBanner: false,\n      title: 'Flutter Demo',\n      theme: ThemeData(\n        colorScheme: ColorScheme.fromSwatch(primary: Colors.deepPurple), // 주요 색상 deepPurple로 설정\n        useMaterial3: false,\n      ),\n      home: const UserListScreen(), // 처음 화면으로 UserListScreen 표시\n    );\n  }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n## APIConstant 클래스 생성\n\n```js\nimport 'dart:io';\n\nclass APIConstant {\n\n  static const url = 'https://reqres.in/api/users?page=2';\n\n  static Map<String, String> authHeader = {\n    HttpHeaders.contentTypeHeader: 'application/json; charset=UTF-8'\n  };\n\n}\n```\n\n## UserModels 클래스 생성\n\n```js\nclass UserModels {\n  UserModels({\n    num? page,\n    num? perPage,\n    num? total,\n    num? totalPages,\n    List<Data>? data,\n    Support? support,\n  }) {\n    _page = page;\n    _perPage = perPage;\n    _total = total;\n    _totalPages = totalPages;\n    _data = data;\n    _support = support;\n  }\n\n  UserModels.fromJson(dynamic json) {\n    _page = json['page'];\n    _perPage = json['per_page'];\n    _total = json['total'];\n    _totalPages = json['total_pages'];\n    if (json['data'] != null) {\n      _data = [];\n      json['data'].forEach((v) {\n        _data?.add(Data.fromJson(v));\n      });\n    }\n    _support = json['support'] != null ? Support.fromJson(json['support']) : null;\n  }\n\n  num? _page;\n  num? _perPage;\n  num? _total;\n  num? _totalPages;\n  List<Data>? _data;\n  Support? _support;\n\n  UserModels copyWith({\n    num? page,\n    num? perPage,\n    num? total,\n    num? totalPages,\n    List<Data>? data,\n    Support? support,\n  }) => UserModels(\n    page: page ?? _page,\n    perPage: perPage ?? _perPage,\n    total: total ?? _total,\n    totalPages: totalPages ?? _totalPages,\n    data: data ?? _data,\n    support: support ?? _support,\n  );\n\n  num? get page => _page;\n  num? get perPage => _perPage;\n  num? get total => _total;\n  num? get totalPages => _totalPages;\n  List<Data>? get data => _data;\n  Support? get support => _support;\n\n  Map<String, dynamic> toJson() {\n    final map = <String, dynamic>{};\n    map['page'] = _page;\n    map['per_page'] = _perPage;\n    map['total'] = _total;\n    map['total_pages'] = _totalPages;\n    if (_data != null) {\n      map['data'] = _data?.map((v) => v.toJson()).toList();\n    }\n    if (_support != null) {\n      map['support'] = _support?.toJson();\n    }\n    return map;\n  }\n\n}\n\nclass Support {\n  Support({\n    String? url,\n    String? text,\n  }) {\n    _url = url;\n    _text = text;\n  }\n\n  Support.fromJson(dynamic json) {\n    _url = json['url'];\n    _text = json['text'];\n  }\n\n  String? _url;\n  String? _text;\n\n  Support copyWith({\n    String? url,\n    String? text,\n  }) => Support(\n    url: url ?? _url,\n    text: text ?? _text,\n  );\n\n  String? get url => _url;\n  String? get text => _text;\n\n  Map<String, dynamic> toJson() {\n    final map = <String, dynamic>{};\n    map['url'] = _url;\n    map['text'] = _text;\n    return map;\n  }\n\n}\n\nclass Data {\n  Data({\n    num? id,\n    String? email,\n    String? firstName,\n    String? lastName,\n    String? avatar,\n  }) {\n    _id = id;\n    _email = email;\n    _firstName = firstName;\n    _lastName = lastName;\n    _avatar = avatar;\n  }\n\n  Data.fromJson(dynamic json) {\n    _id = json['id'];\n    _email = json['email'];\n    _firstName = json['first_name'];\n    _lastName = json['last_name'];\n    _avatar = json['avatar'];\n  }\n\n  num? _id;\n  String? _email;\n  String? _firstName;\n  String? _lastName;\n  String? _avatar;\n\n  Data copyWith({\n    num? id,\n    String? email,\n    String? firstName,\n    String? lastName,\n    String? avatar,\n  }) => Data(\n    id: id ?? _id,\n    email: email ?? _email,\n    firstName: firstName ?? _firstName,\n    lastName: lastName ?? _lastName,\n    avatar: avatar ?? _avatar,\n  );\n\n  num? get id => _id;\n  String? get email => _email;\n  String? get firstName => _firstName;\n  String? get lastName => _lastName;\n  String? get avatar => _avatar;\n\n  Map<String, dynamic> toJson() {\n    final map = <String, dynamic>{};\n    map['id'] = _id;\n    map['email'] = _email;\n    map['first_name'] = _firstName;\n    map['last_name'] = _lastName;\n    map['avatar'] = _avatar;\n    return map;\n  }\n\n}\n```\n\n<div class=\"content-ad\"></div>\n\n## UserListController 클래스 생성 및 GetxController를 상속받도록 클래스 확장\n\n```js\nimport 'dart:async';\nimport 'dart:convert';\nimport 'dart:io';\nimport 'package:flutter/cupertino.dart';\nimport 'package:http/http.dart' as http;\nimport 'package:get/get.dart';\nimport 'package:post_project/Models/UserModels.dart';\nimport '../APIConstant.dart';\n\nclass UserListController extends GetxController implements GetxService {\n\n  var isLoading = true.obs;\n  var getUserList = <Data>[].obs;\n\n  @override\n  void onInit() {\n    super.onInit();\n    userList();\n  }\n\n  Future<dynamic> userList() async {\n    try {\n      final response = await http.get(\n        Uri.parse(APIConstant.url),\n        headers: APIConstant.authHeader,\n      );\n      debugPrint(\"UserList\");\n      debugPrint(response.body);\n      const utf8Decoder = Utf8Decoder(allowMalformed: true);\n      final decodedBytes = utf8Decoder.convert(response.bodyBytes);\n      Map<String, dynamic> responseBody = json.decode(decodedBytes);\n      if (response.statusCode == 200) {\n        isLoading.value = false;\n        UserModels model = UserModels.fromJson(responseBody);\n        getUserList.value = model.data!;\n      }\n    } on TimeoutException catch (e) {\n      isLoading.value = false;\n      debugPrint(e.toString());\n    } on SocketException catch (e) {\n      isLoading.value = false;\n      debugPrint(e.toString());\n    } on Error catch (e) {\n      isLoading.value = false;\n      debugPrint(e.toString());\n    } catch (e) {\n      debugPrint(e.toString());\n    }\n    return null;\n  }\n\n}\n```\n\n## listView를 위한 UserItems 위젯 작성\n\n```js\nimport 'package:flutter/material.dart';\nimport 'package:post_project/Models/UserModels.dart';\n\nclass UserItems extends StatelessWidget {\n\n  final Data data;\n  const UserItems({Key key, required this.data});\n\n  @override\n  Widget build(BuildContext context) {\n    return Padding(\n      padding: const EdgeInsets.all(8.0),\n      child: Container(\n        decoration: BoxDecoration(border: Border.all(color: Colors.black)),\n        child: Row(\n          children: [\n            SizedBox(\n              height: 100,\n              width: 70,\n              child: Image.network(\n                data.avatar.toString(),\n                fit: BoxFit.cover,\n              ),\n            ),\n            Padding(\n              padding: const EdgeInsets.all(15.0),\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Text(\n                    \"${data.firstName} ${data.lastName}\",\n                    style: const TextStyle(\n                        fontSize: 20, fontWeight: FontWeight.w600),\n                  ),\n                  const SizedBox(height: 5),\n                  Text(data.email.toString()),\n                ],\n              ),\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n```\n\n<div class=\"content-ad\"></div>\n\n## 이렇게 GetxController를 호출하세요\n\n```js\nfinal userListController = Get.put(UserListController(), permanent: true);\n```\n\n## UserListScreen 클래스를 생성하세요\n\n전체 코드:\n\n<div class=\"content-ad\"></div>\n\n```js\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:get/get.dart';\nimport 'package:post_project/Controller/UserListController.dart';\nimport 'package:post_project/UserItems.dart';\n\nclass UserListScreen extends StatefulWidget {\n  const UserListScreen({super.key});\n\n  @override\n  State<UserListScreen> createState() => _UserListScreenState();\n}\n\nclass _UserListScreenState extends State<UserListScreen> {\n\n  final userListController = Get.put(UserListController(),permanent: true);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        systemOverlayStyle: const SystemUiOverlayStyle(\n          statusBarColor: Colors.green,\n          statusBarIconBrightness: Brightness.dark, // For Android (dark icons)\n          statusBarBrightness: Brightness.light, // For iOS (dark icons)\n        ),\n        titleSpacing: 5,\n        centerTitle: false,\n        elevation: 0,\n        automaticallyImplyLeading: false,\n        backgroundColor: Colors.green,\n        title: const Text(\"User List\",\n            style: TextStyle(\n                fontSize: 18,\n                color: Colors.white,\n                fontWeight: FontWeight.w600)),\n      ),\n      body: Column(\n        children: [\n          Expanded(\n            child: Obx(() {\n              return userListController.getUserList.isEmpty\n                  ? const Center(\n                      child: Text(\"data\"),\n                    )\n                  : ListView.builder(\n                      shrinkWrap: true,\n                      itemCount: userListController.getUserList.length,\n                      itemBuilder: (BuildContext context, int index) {\n                        return UserItems(\n                            data: userListController.getUserList[index]);\n                      });\n            }),\n          )\n        ],\n      ),\n    );\n  }\n}\n```\n\n## 스크린샷:\n\n<img src=\"/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_1.png\" />\n\n## 소스 코드:\n\n<div class=\"content-ad\"></div>\n\nGitHub 링크: [https://github.com/sanjaysharmajw/UserList](https://github.com/sanjaysharmajw/UserList)\n\n## 저와 소통해요:\n\n- LinkedIn: [https://www.linkedin.com/in/sanjaydeveloper/](https://www.linkedin.com/in/sanjaydeveloper/)\n- Instagram: [https://www.instagram.com/sanjayjw/](https://www.instagram.com/sanjayjw/)\n\n![이미지](/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_2.png)\n\n<div class=\"content-ad\"></div>\n\n이 기사를 즐겨 보셨기를 바라요! 제공된 정보를 감사하게 생각하신다면, 'Buy Me A Coffee'로 저를 지원할 수 있어요! 여러분의 작은 선행에 감사하겠습니다!\n","ogImage":{"url":"/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_0.png"},"coverImage":"/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_0.png","tag":["Tech"],"readingTime":12},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_0.png\" alt=\"APIIntegrationusingGetXinflutter\"></p>\n<p>플러터에서 API 통합은 앱과 외부 서비스 간의 데이터 통신을 활성화하여 동적이고 실시간이며 확장 가능한 기능을 제공하고 서로 다른 플랫폼 간에 일관된 경험을 제공하는 데 중요합니다.</p>\n<p>API 통합은 플러터 애플리케이션이 외부 서비스와 상호 작용하고 데이터를 검색하고 다양한 기능을 수행할 수 있도록 가능하게 합니다. 다음은 플러터 개발에서 API 통합이 중요하게 간주되는 몇 가지 이유입니다:</p>\n<ul>\n<li>데이터 검색: 대부분의 애플리케이션은 데이터베이스, 서버 또는 제3자 서비스와 같은 외부 소스에서 데이터를 필요로합니다. API 통합을 통해 플러터 앱이 이러한 데이터를 동적으로 가져와 표시하므로 사용자가 항상 최신 정보에 액세스할 수 있습니다.</li>\n<li>실시간 업데이트: API를 사용하면 클라이언트(플러터 앱)와 서버 간의 실시간 통신이 가능해집니다. 이는 메시징 앱, 협업 도구 또는 실시간 데이터 피드와 같은 실시간 업데이트가 필요한 애플리케이션에 중요합니다.</li>\n<li>오프라인 지원: API는 장치에 로컬로 정보를 캐싱하여 오프라인 데이터 액세스를 지원할 수 있도록 설계될 수 있습니다. 이는 일시적이거나 인터넷 연결이 없는 환경에서 기능해야 하는 애플리케이션에 중요합니다.</li>\n<li>보안: API는 종종 인증 메커니즘을 통합하여 특정 데이터에만 인가된 사용자만이 액세스하거나 특정 작업을 수행할 수 있도록합니다. 이는 응용프로그램 및 데이터의 보안 유지에 도움이 됩니다.</li>\n</ul>\n<div class=\"content-ad\"></div>\n<h2>Android Studio에 JsonToDart 플러그인 설치하기</h2>\n<p>플러그인: <a href=\"https://plugins.jetbrains.com/plugin/12562-jsontodart-json-to-dart-\" rel=\"nofollow\" target=\"_blank\">JsonToDart</a></p>\n<h2>HTTP 패키지 추가하기</h2>\n<p>HTTP 요청을 하기 위해 pubspec.yaml 파일에 http 패키지를 추가하고 flutter pub get을 실행하세요.</p>\n<div class=\"content-ad\"></div>\n<h2>Getx 패키지 추가하기</h2>\n<p>GetX는 플러터를 위한 가벼우면서 강력한 솔루션입니다. 높은 성능의 상태 관리, 지능적인 의존성 주입, 빠르고 실용적인 라우트 관리를 결합하고 있습니다. GetX를 사용하려면 flutter pub add get 명령어를 실행하세요.</p>\n<h2>main.dart 파일에 GetMaterialApp 추가하기</h2>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter/material.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:get/get.dart'</span>; <span class=\"hljs-comment\">// Get 패키지 가져오기</span>\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'UserListScreens.dart'</span>; <span class=\"hljs-comment\">// 화면 파일 import하기</span>\n\n<span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">main</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-title function_\">runApp</span>(<span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyApp</span>());\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">MyApp</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">StatelessWidget</span> {\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">MyApp</span>({<span class=\"hljs-title class_\">Key</span> key}) : <span class=\"hljs-variable language_\">super</span>(<span class=\"hljs-attr\">key</span>: key);\n\n  @override\n  <span class=\"hljs-title class_\">Widget</span> <span class=\"hljs-title function_\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">GetMaterialApp</span>(\n      <span class=\"hljs-attr\">debugShowCheckedModeBanner</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'Flutter Demo'</span>,\n      <span class=\"hljs-attr\">theme</span>: <span class=\"hljs-title class_\">ThemeData</span>(\n        <span class=\"hljs-attr\">colorScheme</span>: <span class=\"hljs-title class_\">ColorScheme</span>.<span class=\"hljs-title function_\">fromSwatch</span>(<span class=\"hljs-attr\">primary</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">deepPurple</span>), <span class=\"hljs-comment\">// 주요 색상 deepPurple로 설정</span>\n        <span class=\"hljs-attr\">useMaterial3</span>: <span class=\"hljs-literal\">false</span>,\n      ),\n      <span class=\"hljs-attr\">home</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">UserListScreen</span>(), <span class=\"hljs-comment\">// 처음 화면으로 UserListScreen 표시</span>\n    );\n  }\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<h2>APIConstant 클래스 생성</h2>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:io'</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">APIConstant</span> {\n\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-keyword\">const</span> url = <span class=\"hljs-string\">'https://reqres.in/api/users?page=2'</span>;\n\n  <span class=\"hljs-keyword\">static</span> <span class=\"hljs-title class_\">Map</span>&#x3C;<span class=\"hljs-title class_\">String</span>, <span class=\"hljs-title class_\">String</span>> authHeader = {\n    <span class=\"hljs-title class_\">HttpHeaders</span>.<span class=\"hljs-property\">contentTypeHeader</span>: <span class=\"hljs-string\">'application/json; charset=UTF-8'</span>\n  };\n\n}\n</code></pre>\n<h2>UserModels 클래스 생성</h2>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserModels</span> {\n  <span class=\"hljs-title class_\">UserModels</span>({\n    num? page,\n    num? perPage,\n    num? total,\n    num? totalPages,\n    <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Data</span>>? data,\n    <span class=\"hljs-title class_\">Support</span>? support,\n  }) {\n    _page = page;\n    _perPage = perPage;\n    _total = total;\n    _totalPages = totalPages;\n    _data = data;\n    _support = support;\n  }\n\n  <span class=\"hljs-title class_\">UserModels</span>.<span class=\"hljs-title function_\">fromJson</span>(<span class=\"hljs-params\">dynamic json</span>) {\n    _page = json[<span class=\"hljs-string\">'page'</span>];\n    _perPage = json[<span class=\"hljs-string\">'per_page'</span>];\n    _total = json[<span class=\"hljs-string\">'total'</span>];\n    _totalPages = json[<span class=\"hljs-string\">'total_pages'</span>];\n    <span class=\"hljs-keyword\">if</span> (json[<span class=\"hljs-string\">'data'</span>] != <span class=\"hljs-literal\">null</span>) {\n      _data = [];\n      json[<span class=\"hljs-string\">'data'</span>].<span class=\"hljs-title function_\">forEach</span>((v) {\n        _data?.<span class=\"hljs-title function_\">add</span>(<span class=\"hljs-title class_\">Data</span>.<span class=\"hljs-title function_\">fromJson</span>(v));\n      });\n    }\n    _support = json[<span class=\"hljs-string\">'support'</span>] != <span class=\"hljs-literal\">null</span> ? <span class=\"hljs-title class_\">Support</span>.<span class=\"hljs-title function_\">fromJson</span>(json[<span class=\"hljs-string\">'support'</span>]) : <span class=\"hljs-literal\">null</span>;\n  }\n\n  num? _page;\n  num? _perPage;\n  num? _total;\n  num? _totalPages;\n  <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Data</span>>? _data;\n  <span class=\"hljs-title class_\">Support</span>? _support;\n\n  <span class=\"hljs-title class_\">UserModels</span> <span class=\"hljs-title function_\">copyWith</span>({\n    num? page,\n    num? perPage,\n    num? total,\n    num? totalPages,\n    <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Data</span>>? data,\n    <span class=\"hljs-title class_\">Support</span>? support,\n  }) => <span class=\"hljs-title class_\">UserModels</span>(\n    <span class=\"hljs-attr\">page</span>: page ?? _page,\n    <span class=\"hljs-attr\">perPage</span>: perPage ?? _perPage,\n    <span class=\"hljs-attr\">total</span>: total ?? _total,\n    <span class=\"hljs-attr\">totalPages</span>: totalPages ?? _totalPages,\n    <span class=\"hljs-attr\">data</span>: data ?? _data,\n    <span class=\"hljs-attr\">support</span>: support ?? _support,\n  );\n\n  num? get page => _page;\n  num? get perPage => _perPage;\n  num? get total => _total;\n  num? get totalPages => _totalPages;\n  <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Data</span>>? get data => _data;\n  <span class=\"hljs-title class_\">Support</span>? get support => _support;\n\n  <span class=\"hljs-title class_\">Map</span>&#x3C;<span class=\"hljs-title class_\">String</span>, dynamic> <span class=\"hljs-title function_\">toJson</span>(<span class=\"hljs-params\"></span>) {\n    final map = &#x3C;<span class=\"hljs-title class_\">String</span>, dynamic>{};\n    map[<span class=\"hljs-string\">'page'</span>] = _page;\n    map[<span class=\"hljs-string\">'per_page'</span>] = _perPage;\n    map[<span class=\"hljs-string\">'total'</span>] = _total;\n    map[<span class=\"hljs-string\">'total_pages'</span>] = _totalPages;\n    <span class=\"hljs-keyword\">if</span> (_data != <span class=\"hljs-literal\">null</span>) {\n      map[<span class=\"hljs-string\">'data'</span>] = _data?.<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">v</span>) =></span> v.<span class=\"hljs-title function_\">toJson</span>()).<span class=\"hljs-title function_\">toList</span>();\n    }\n    <span class=\"hljs-keyword\">if</span> (_support != <span class=\"hljs-literal\">null</span>) {\n      map[<span class=\"hljs-string\">'support'</span>] = _support?.<span class=\"hljs-title function_\">toJson</span>();\n    }\n    <span class=\"hljs-keyword\">return</span> map;\n  }\n\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Support</span> {\n  <span class=\"hljs-title class_\">Support</span>({\n    <span class=\"hljs-title class_\">String</span>? url,\n    <span class=\"hljs-title class_\">String</span>? text,\n  }) {\n    _url = url;\n    _text = text;\n  }\n\n  <span class=\"hljs-title class_\">Support</span>.<span class=\"hljs-title function_\">fromJson</span>(<span class=\"hljs-params\">dynamic json</span>) {\n    _url = json[<span class=\"hljs-string\">'url'</span>];\n    _text = json[<span class=\"hljs-string\">'text'</span>];\n  }\n\n  <span class=\"hljs-title class_\">String</span>? _url;\n  <span class=\"hljs-title class_\">String</span>? _text;\n\n  <span class=\"hljs-title class_\">Support</span> <span class=\"hljs-title function_\">copyWith</span>({\n    <span class=\"hljs-title class_\">String</span>? url,\n    <span class=\"hljs-title class_\">String</span>? text,\n  }) => <span class=\"hljs-title class_\">Support</span>(\n    <span class=\"hljs-attr\">url</span>: url ?? _url,\n    <span class=\"hljs-attr\">text</span>: text ?? _text,\n  );\n\n  <span class=\"hljs-title class_\">String</span>? get url => _url;\n  <span class=\"hljs-title class_\">String</span>? get text => _text;\n\n  <span class=\"hljs-title class_\">Map</span>&#x3C;<span class=\"hljs-title class_\">String</span>, dynamic> <span class=\"hljs-title function_\">toJson</span>(<span class=\"hljs-params\"></span>) {\n    final map = &#x3C;<span class=\"hljs-title class_\">String</span>, dynamic>{};\n    map[<span class=\"hljs-string\">'url'</span>] = _url;\n    map[<span class=\"hljs-string\">'text'</span>] = _text;\n    <span class=\"hljs-keyword\">return</span> map;\n  }\n\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">Data</span> {\n  <span class=\"hljs-title class_\">Data</span>({\n    num? id,\n    <span class=\"hljs-title class_\">String</span>? email,\n    <span class=\"hljs-title class_\">String</span>? firstName,\n    <span class=\"hljs-title class_\">String</span>? lastName,\n    <span class=\"hljs-title class_\">String</span>? avatar,\n  }) {\n    _id = id;\n    _email = email;\n    _firstName = firstName;\n    _lastName = lastName;\n    _avatar = avatar;\n  }\n\n  <span class=\"hljs-title class_\">Data</span>.<span class=\"hljs-title function_\">fromJson</span>(<span class=\"hljs-params\">dynamic json</span>) {\n    _id = json[<span class=\"hljs-string\">'id'</span>];\n    _email = json[<span class=\"hljs-string\">'email'</span>];\n    _firstName = json[<span class=\"hljs-string\">'first_name'</span>];\n    _lastName = json[<span class=\"hljs-string\">'last_name'</span>];\n    _avatar = json[<span class=\"hljs-string\">'avatar'</span>];\n  }\n\n  num? _id;\n  <span class=\"hljs-title class_\">String</span>? _email;\n  <span class=\"hljs-title class_\">String</span>? _firstName;\n  <span class=\"hljs-title class_\">String</span>? _lastName;\n  <span class=\"hljs-title class_\">String</span>? _avatar;\n\n  <span class=\"hljs-title class_\">Data</span> <span class=\"hljs-title function_\">copyWith</span>({\n    num? id,\n    <span class=\"hljs-title class_\">String</span>? email,\n    <span class=\"hljs-title class_\">String</span>? firstName,\n    <span class=\"hljs-title class_\">String</span>? lastName,\n    <span class=\"hljs-title class_\">String</span>? avatar,\n  }) => <span class=\"hljs-title class_\">Data</span>(\n    <span class=\"hljs-attr\">id</span>: id ?? _id,\n    <span class=\"hljs-attr\">email</span>: email ?? _email,\n    <span class=\"hljs-attr\">firstName</span>: firstName ?? _firstName,\n    <span class=\"hljs-attr\">lastName</span>: lastName ?? _lastName,\n    <span class=\"hljs-attr\">avatar</span>: avatar ?? _avatar,\n  );\n\n  num? get id => _id;\n  <span class=\"hljs-title class_\">String</span>? get email => _email;\n  <span class=\"hljs-title class_\">String</span>? get firstName => _firstName;\n  <span class=\"hljs-title class_\">String</span>? get lastName => _lastName;\n  <span class=\"hljs-title class_\">String</span>? get avatar => _avatar;\n\n  <span class=\"hljs-title class_\">Map</span>&#x3C;<span class=\"hljs-title class_\">String</span>, dynamic> <span class=\"hljs-title function_\">toJson</span>(<span class=\"hljs-params\"></span>) {\n    final map = &#x3C;<span class=\"hljs-title class_\">String</span>, dynamic>{};\n    map[<span class=\"hljs-string\">'id'</span>] = _id;\n    map[<span class=\"hljs-string\">'email'</span>] = _email;\n    map[<span class=\"hljs-string\">'first_name'</span>] = _firstName;\n    map[<span class=\"hljs-string\">'last_name'</span>] = _lastName;\n    map[<span class=\"hljs-string\">'avatar'</span>] = _avatar;\n    <span class=\"hljs-keyword\">return</span> map;\n  }\n\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<h2>UserListController 클래스 생성 및 GetxController를 상속받도록 클래스 확장</h2>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:async'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:convert'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'dart:io'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter/cupertino.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:http/http.dart'</span> <span class=\"hljs-keyword\">as</span> http;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:get/get.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:post_project/Models/UserModels.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'../APIConstant.dart'</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserListController</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">GetxController</span> implements <span class=\"hljs-title class_\">GetxService</span> {\n\n  <span class=\"hljs-keyword\">var</span> isLoading = <span class=\"hljs-literal\">true</span>.<span class=\"hljs-property\">obs</span>;\n  <span class=\"hljs-keyword\">var</span> getUserList = &#x3C;<span class=\"hljs-title class_\">Data</span>>[].<span class=\"hljs-property\">obs</span>;\n\n  @override\n  <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title function_\">onInit</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-variable language_\">super</span>.<span class=\"hljs-title function_\">onInit</span>();\n    <span class=\"hljs-title function_\">userList</span>();\n  }\n\n  <span class=\"hljs-title class_\">Future</span>&#x3C;dynamic> <span class=\"hljs-title function_\">userList</span>() <span class=\"hljs-keyword\">async</span> {\n    <span class=\"hljs-keyword\">try</span> {\n      final response = <span class=\"hljs-keyword\">await</span> http.<span class=\"hljs-title function_\">get</span>(\n        <span class=\"hljs-title class_\">Uri</span>.<span class=\"hljs-title function_\">parse</span>(<span class=\"hljs-title class_\">APIConstant</span>.<span class=\"hljs-property\">url</span>),\n        <span class=\"hljs-attr\">headers</span>: <span class=\"hljs-title class_\">APIConstant</span>.<span class=\"hljs-property\">authHeader</span>,\n      );\n      <span class=\"hljs-title function_\">debugPrint</span>(<span class=\"hljs-string\">\"UserList\"</span>);\n      <span class=\"hljs-title function_\">debugPrint</span>(response.<span class=\"hljs-property\">body</span>);\n      <span class=\"hljs-keyword\">const</span> utf8Decoder = <span class=\"hljs-title class_\">Utf8Decoder</span>(<span class=\"hljs-attr\">allowMalformed</span>: <span class=\"hljs-literal\">true</span>);\n      final decodedBytes = utf8Decoder.<span class=\"hljs-title function_\">convert</span>(response.<span class=\"hljs-property\">bodyBytes</span>);\n      <span class=\"hljs-title class_\">Map</span>&#x3C;<span class=\"hljs-title class_\">String</span>, dynamic> responseBody = json.<span class=\"hljs-title function_\">decode</span>(decodedBytes);\n      <span class=\"hljs-keyword\">if</span> (response.<span class=\"hljs-property\">statusCode</span> == <span class=\"hljs-number\">200</span>) {\n        isLoading.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-title class_\">UserModels</span> model = <span class=\"hljs-title class_\">UserModels</span>.<span class=\"hljs-title function_\">fromJson</span>(responseBody);\n        getUserList.<span class=\"hljs-property\">value</span> = model.<span class=\"hljs-property\">data</span>!;\n      }\n    } on <span class=\"hljs-title class_\">TimeoutException</span> <span class=\"hljs-keyword\">catch</span> (e) {\n      isLoading.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>;\n      <span class=\"hljs-title function_\">debugPrint</span>(e.<span class=\"hljs-title function_\">toString</span>());\n    } on <span class=\"hljs-title class_\">SocketException</span> <span class=\"hljs-keyword\">catch</span> (e) {\n      isLoading.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>;\n      <span class=\"hljs-title function_\">debugPrint</span>(e.<span class=\"hljs-title function_\">toString</span>());\n    } on <span class=\"hljs-title class_\">Error</span> <span class=\"hljs-keyword\">catch</span> (e) {\n      isLoading.<span class=\"hljs-property\">value</span> = <span class=\"hljs-literal\">false</span>;\n      <span class=\"hljs-title function_\">debugPrint</span>(e.<span class=\"hljs-title function_\">toString</span>());\n    } <span class=\"hljs-keyword\">catch</span> (e) {\n      <span class=\"hljs-title function_\">debugPrint</span>(e.<span class=\"hljs-title function_\">toString</span>());\n    }\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n  }\n\n}\n</code></pre>\n<h2>listView를 위한 UserItems 위젯 작성</h2>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter/material.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:post_project/Models/UserModels.dart'</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserItems</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">StatelessWidget</span> {\n\n  final <span class=\"hljs-title class_\">Data</span> data;\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">UserItems</span>({<span class=\"hljs-title class_\">Key</span> key, required <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">data</span>});\n\n  @override\n  <span class=\"hljs-title class_\">Widget</span> <span class=\"hljs-title function_\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Padding</span>(\n      <span class=\"hljs-attr\">padding</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">EdgeInsets</span>.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-number\">8.0</span>),\n      <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">Container</span>(\n        <span class=\"hljs-attr\">decoration</span>: <span class=\"hljs-title class_\">BoxDecoration</span>(<span class=\"hljs-attr\">border</span>: <span class=\"hljs-title class_\">Border</span>.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-attr\">color</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">black</span>)),\n        <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">Row</span>(\n          <span class=\"hljs-attr\">children</span>: [\n            <span class=\"hljs-title class_\">SizedBox</span>(\n              <span class=\"hljs-attr\">height</span>: <span class=\"hljs-number\">100</span>,\n              <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">70</span>,\n              <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">Image</span>.<span class=\"hljs-title function_\">network</span>(\n                data.<span class=\"hljs-property\">avatar</span>.<span class=\"hljs-title function_\">toString</span>(),\n                <span class=\"hljs-attr\">fit</span>: <span class=\"hljs-title class_\">BoxFit</span>.<span class=\"hljs-property\">cover</span>,\n              ),\n            ),\n            <span class=\"hljs-title class_\">Padding</span>(\n              <span class=\"hljs-attr\">padding</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">EdgeInsets</span>.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-number\">15.0</span>),\n              <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">Column</span>(\n                <span class=\"hljs-attr\">crossAxisAlignment</span>: <span class=\"hljs-title class_\">CrossAxisAlignment</span>.<span class=\"hljs-property\">start</span>,\n                <span class=\"hljs-attr\">children</span>: [\n                  <span class=\"hljs-title class_\">Text</span>(\n                    <span class=\"hljs-string\">\"${data.firstName} ${data.lastName}\"</span>,\n                    <span class=\"hljs-attr\">style</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">TextStyle</span>(\n                        <span class=\"hljs-attr\">fontSize</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">fontWeight</span>: <span class=\"hljs-title class_\">FontWeight</span>.<span class=\"hljs-property\">w600</span>),\n                  ),\n                  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SizedBox</span>(<span class=\"hljs-attr\">height</span>: <span class=\"hljs-number\">5</span>),\n                  <span class=\"hljs-title class_\">Text</span>(data.<span class=\"hljs-property\">email</span>.<span class=\"hljs-title function_\">toString</span>()),\n                ],\n              ),\n            )\n          ],\n        ),\n      ),\n    );\n  }\n}\n</code></pre>\n<div class=\"content-ad\"></div>\n<h2>이렇게 GetxController를 호출하세요</h2>\n<pre><code class=\"hljs language-js\">final userListController = <span class=\"hljs-title class_\">Get</span>.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-title class_\">UserListController</span>(), <span class=\"hljs-attr\">permanent</span>: <span class=\"hljs-literal\">true</span>);\n</code></pre>\n<h2>UserListScreen 클래스를 생성하세요</h2>\n<p>전체 코드:</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter/material.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:flutter/services.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:get/get.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:post_project/Controller/UserListController.dart'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:post_project/UserItems.dart'</span>;\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">UserListScreen</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">StatefulWidget</span> {\n  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">UserListScreen</span>({<span class=\"hljs-variable language_\">super</span>.<span class=\"hljs-property\">key</span>});\n\n  @override\n  <span class=\"hljs-title class_\">State</span>&#x3C;<span class=\"hljs-title class_\">UserListScreen</span>> <span class=\"hljs-title function_\">createState</span>() => <span class=\"hljs-title function_\">_UserListScreenState</span>();\n}\n\n<span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">_UserListScreenState</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_ inherited__\">State</span>&#x3C;<span class=\"hljs-title class_\">UserListScreen</span>> {\n\n  final userListController = <span class=\"hljs-title class_\">Get</span>.<span class=\"hljs-title function_\">put</span>(<span class=\"hljs-title class_\">UserListController</span>(),<span class=\"hljs-attr\">permanent</span>: <span class=\"hljs-literal\">true</span>);\n\n  @override\n  <span class=\"hljs-title class_\">Widget</span> <span class=\"hljs-title function_\">build</span>(<span class=\"hljs-params\">BuildContext context</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Scaffold</span>(\n      <span class=\"hljs-attr\">appBar</span>: <span class=\"hljs-title class_\">AppBar</span>(\n        <span class=\"hljs-attr\">systemOverlayStyle</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">SystemUiOverlayStyle</span>(\n          <span class=\"hljs-attr\">statusBarColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">green</span>,\n          <span class=\"hljs-attr\">statusBarIconBrightness</span>: <span class=\"hljs-title class_\">Brightness</span>.<span class=\"hljs-property\">dark</span>, <span class=\"hljs-comment\">// For Android (dark icons)</span>\n          <span class=\"hljs-attr\">statusBarBrightness</span>: <span class=\"hljs-title class_\">Brightness</span>.<span class=\"hljs-property\">light</span>, <span class=\"hljs-comment\">// For iOS (dark icons)</span>\n        ),\n        <span class=\"hljs-attr\">titleSpacing</span>: <span class=\"hljs-number\">5</span>,\n        <span class=\"hljs-attr\">centerTitle</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">elevation</span>: <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">automaticallyImplyLeading</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">green</span>,\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"User List\"</span>,\n            <span class=\"hljs-attr\">style</span>: <span class=\"hljs-title class_\">TextStyle</span>(\n                <span class=\"hljs-attr\">fontSize</span>: <span class=\"hljs-number\">18</span>,\n                <span class=\"hljs-attr\">color</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">white</span>,\n                <span class=\"hljs-attr\">fontWeight</span>: <span class=\"hljs-title class_\">FontWeight</span>.<span class=\"hljs-property\">w600</span>)),\n      ),\n      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">Column</span>(\n        <span class=\"hljs-attr\">children</span>: [\n          <span class=\"hljs-title class_\">Expanded</span>(\n            <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">Obx</span>(() {\n              <span class=\"hljs-keyword\">return</span> userListController.<span class=\"hljs-property\">getUserList</span>.<span class=\"hljs-property\">isEmpty</span>\n                  ? <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Center</span>(\n                      <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"data\"</span>),\n                    )\n                  : <span class=\"hljs-title class_\">ListView</span>.<span class=\"hljs-title function_\">builder</span>(\n                      <span class=\"hljs-attr\">shrinkWrap</span>: <span class=\"hljs-literal\">true</span>,\n                      <span class=\"hljs-attr\">itemCount</span>: userListController.<span class=\"hljs-property\">getUserList</span>.<span class=\"hljs-property\">length</span>,\n                      <span class=\"hljs-attr\">itemBuilder</span>: (<span class=\"hljs-title class_\">BuildContext</span> context, int index) {\n                        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">UserItems</span>(\n                            <span class=\"hljs-attr\">data</span>: userListController.<span class=\"hljs-property\">getUserList</span>[index]);\n                      });\n            }),\n          )\n        ],\n      ),\n    );\n  }\n}\n</code></pre>\n<h2>스크린샷:</h2>\n<img src=\"/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_1.png\">\n<h2>소스 코드:</h2>\n<div class=\"content-ad\"></div>\n<p>GitHub 링크: <a href=\"https://github.com/sanjaysharmajw/UserList\" rel=\"nofollow\" target=\"_blank\">https://github.com/sanjaysharmajw/UserList</a></p>\n<h2>저와 소통해요:</h2>\n<ul>\n<li>LinkedIn: <a href=\"https://www.linkedin.com/in/sanjaydeveloper/\" rel=\"nofollow\" target=\"_blank\">https://www.linkedin.com/in/sanjaydeveloper/</a></li>\n<li>Instagram: <a href=\"https://www.instagram.com/sanjayjw/\" rel=\"nofollow\" target=\"_blank\">https://www.instagram.com/sanjayjw/</a></li>\n</ul>\n<p><img src=\"/assets/img/2024-06-22-APIIntegrationusingGetXinflutter_2.png\" alt=\"이미지\"></p>\n<div class=\"content-ad\"></div>\n<p>이 기사를 즐겨 보셨기를 바라요! 제공된 정보를 감사하게 생각하신다면, 'Buy Me A Coffee'로 저를 지원할 수 있어요! 여러분의 작은 선행에 감사하겠습니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}