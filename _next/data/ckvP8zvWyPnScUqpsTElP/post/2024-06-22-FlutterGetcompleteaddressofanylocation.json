{"pageProps":{"post":{"title":"Flutter 모든 위치의 전체 주소를 가져오는 방법","description":"","date":"2024-06-22 04:06","slug":"2024-06-22-FlutterGetcompleteaddressofanylocation","content":"\n<img src=\"/assets/img/2024-06-22-FlutterGetcompleteaddressofanylocation_0.png\" />\n\n어떤 위치든 위도와 경도를 사용하여 완전한 주소(우편 번호 포함)를 쉽게 얻을 수 있습니다.\n\n예를 들어:\n\n이렇게 하는 법을 알아보겠습니다 ......\n\n<div class=\"content-ad\"></div>\n\n🌞 먼저 아래 종속성을 pubspec.yaml 파일에 추가해주세요\n\n```js\ngeocoding: ^2.1.1\n```\n\n🌞 그 후에 .dart 파일에서 종속성을 import해주세요\n\n```js\nimport \"package:geocoding/geocoding.dart\";\n```\n\n<div class=\"content-ad\"></div>\n\n🌞 이제 Lat, Long을 입력으로 받아 주소를 문자열로 반환하는 getPlacemark라는 간단한 함수를 만들어 보겠습니다.\n\n함수를 비동기로 정의하고, 전체 내용을 try-catch로 감싸서 예외를 처리할 겁니다.\n\n🌞 그래서 try 블록 안에서 placemarkFromCoordinates 작업을 사용하여 위도와 경도를 전달하여 플레이스마크를 가져올 것입니다. 다음과 같이:\n\n```js\nList<Placemark> placemarks = await placemarkFromCoordinates(lat, long);\n```\n\n<div class=\"content-ad\"></div>\n\n이 장소 표시는 위치의 모든 세부 정보를 포함하고 있어요.\n\n그들을 추출하고 정리하기 위해 장소 표시를 반전하고 마지막 인덱스에 액세스할 수 있어요:\n\n```js\nString address = \"\";\naddress += '${placemarks.reversed.last.subLocality ?? ''}';\n```\n\n위와 같이 주소에 액세스하고 문자열에 추가할 수 있어요. 이때 널 체크를 수행하여, 위도와 경도에 어떠한 값도 포함되지 않을 경우 (즉, 널 값 반환) 대비가 되도록 해요.\n\n<div class=\"content-ad\"></div>\n\n🌞 이제 Lat Long의 거리 주소를 얻는 방법은 다음 코드를 사용할 수 있습니다. 주소의 부분에 액세스하고 정리하여 정리된 거리 주소를 얻는 코드를 포함하고 있습니다:\n\n```js\nString address = \"\";\n\n// 거리 주소 문자열 가져오기\nvar streets = placemarks.reversed\n    .map((placemark) => placemark.street)\n    .where((street) => street != null);\n\n// 불필요한 부분 필터링\nstreets = streets.where((street) =>\n    street!.toLowerCase() !=\n    placemarks.reversed.last.locality!\n        .toLowerCase()); // 도시 이름 제거\nstreets =\n    streets.where((street) => !street!.contains('+')); // 코드 제거\n\naddress += streets.join(', ');\n```\n\n이 부분은 거리 주소를 가져와 도시 이름 등을 제거하여, 도시 이름에 개별적으로 액세스할 수 있도록 구체적으로 만듭니다.\n\n🌞 아래 제공된 완전한 코드를 살펴보세요:\n\n<div class=\"content-ad\"></div>\n\n```js\nimport 'package:geocoding/geocoding.dart';\n\nFuture<String> getPlacemarks(double lat, double long) async {\n  try {\n    List<Placemark> placemarks = await placemarkFromCoordinates(lat, long);\n\n    var address = '';\n\n    if (placemarks.isNotEmpty) {\n\n      // Address components without null values are concatenated\n      var streets = placemarks.reversed\n          .map((placemark) => placemark.street)\n          .where((street) => street != null);\n\n      // Unwanted parts are filtered out\n      streets = streets.where((street) =>\n          street!.toLowerCase() !=\n          placemarks.reversed.last.locality!\n              .toLowerCase()); // Remove city names\n      streets =\n          streets.where((street) => !street!.contains('+')); // Remove street codes\n\n      address += streets.join(', ');\n\n      address += ', ${placemarks.reversed.last.subLocality ?? ''}';\n      address += ', ${placemarks.reversed.last.locality ?? ''}';\n      address += ', ${placemarks.reversed.last.subAdministrativeArea ?? ''}';\n      address += ', ${placemarks.reversed.last.administrativeArea ?? ''}';\n      address += ', ${placemarks.reversed.last.postalCode ?? ''}';\n      address += ', ${placemarks.reversed.last.country ?? ''}';\n    }\n\n    print(\"Your Address for ($lat, $long) is: $address\");\n\n    return address;\n  } catch (e) {\n    print(\"Error getting placemarks: $e\");\n    return \"No Address\";\n  }\n}\n```\n\n🧑🏿‍💻 Follow for more such blogs ☺️….\n","ogImage":{"url":"/assets/img/2024-06-22-FlutterGetcompleteaddressofanylocation_0.png"},"coverImage":"/assets/img/2024-06-22-FlutterGetcompleteaddressofanylocation_0.png","tag":["Tech"],"readingTime":4},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<img src=\"/assets/img/2024-06-22-FlutterGetcompleteaddressofanylocation_0.png\">\n<p>어떤 위치든 위도와 경도를 사용하여 완전한 주소(우편 번호 포함)를 쉽게 얻을 수 있습니다.</p>\n<p>예를 들어:</p>\n<p>이렇게 하는 법을 알아보겠습니다 ......</p>\n<div class=\"content-ad\"></div>\n<p>🌞 먼저 아래 종속성을 pubspec.yaml 파일에 추가해주세요</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">geocoding</span>: ^<span class=\"hljs-number\">2.1</span><span class=\"hljs-number\">.1</span>\n</code></pre>\n<p>🌞 그 후에 .dart 파일에서 종속성을 import해주세요</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"package:geocoding/geocoding.dart\"</span>;\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>🌞 이제 Lat, Long을 입력으로 받아 주소를 문자열로 반환하는 getPlacemark라는 간단한 함수를 만들어 보겠습니다.</p>\n<p>함수를 비동기로 정의하고, 전체 내용을 try-catch로 감싸서 예외를 처리할 겁니다.</p>\n<p>🌞 그래서 try 블록 안에서 placemarkFromCoordinates 작업을 사용하여 위도와 경도를 전달하여 플레이스마크를 가져올 것입니다. 다음과 같이:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Placemark</span>> placemarks = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">placemarkFromCoordinates</span>(lat, long);\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>이 장소 표시는 위치의 모든 세부 정보를 포함하고 있어요.</p>\n<p>그들을 추출하고 정리하기 위해 장소 표시를 반전하고 마지막 인덱스에 액세스할 수 있어요:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">String</span> address = <span class=\"hljs-string\">\"\"</span>;\naddress += <span class=\"hljs-string\">'${placemarks.reversed.last.subLocality ?? '</span><span class=\"hljs-string\">'}'</span>;\n</code></pre>\n<p>위와 같이 주소에 액세스하고 문자열에 추가할 수 있어요. 이때 널 체크를 수행하여, 위도와 경도에 어떠한 값도 포함되지 않을 경우 (즉, 널 값 반환) 대비가 되도록 해요.</p>\n<div class=\"content-ad\"></div>\n<p>🌞 이제 Lat Long의 거리 주소를 얻는 방법은 다음 코드를 사용할 수 있습니다. 주소의 부분에 액세스하고 정리하여 정리된 거리 주소를 얻는 코드를 포함하고 있습니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">String</span> address = <span class=\"hljs-string\">\"\"</span>;\n\n<span class=\"hljs-comment\">// 거리 주소 문자열 가져오기</span>\n<span class=\"hljs-keyword\">var</span> streets = placemarks.<span class=\"hljs-property\">reversed</span>\n    .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">placemark</span>) =></span> placemark.<span class=\"hljs-property\">street</span>)\n    .<span class=\"hljs-title function_\">where</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">street</span>) =></span> street != <span class=\"hljs-literal\">null</span>);\n\n<span class=\"hljs-comment\">// 불필요한 부분 필터링</span>\nstreets = streets.<span class=\"hljs-title function_\">where</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">street</span>) =></span>\n    street!.<span class=\"hljs-title function_\">toLowerCase</span>() !=\n    placemarks.<span class=\"hljs-property\">reversed</span>.<span class=\"hljs-property\">last</span>.<span class=\"hljs-property\">locality</span>!\n        .<span class=\"hljs-title function_\">toLowerCase</span>()); <span class=\"hljs-comment\">// 도시 이름 제거</span>\nstreets =\n    streets.<span class=\"hljs-title function_\">where</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">street</span>) =></span> !street!.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">'+'</span>)); <span class=\"hljs-comment\">// 코드 제거</span>\n\naddress += streets.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">', '</span>);\n</code></pre>\n<p>이 부분은 거리 주소를 가져와 도시 이름 등을 제거하여, 도시 이름에 개별적으로 액세스할 수 있도록 구체적으로 만듭니다.</p>\n<p>🌞 아래 제공된 완전한 코드를 살펴보세요:</p>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'package:geocoding/geocoding.dart'</span>;\n\n<span class=\"hljs-title class_\">Future</span>&#x3C;<span class=\"hljs-title class_\">String</span>> <span class=\"hljs-title function_\">getPlacemarks</span>(double lat, double long) <span class=\"hljs-keyword\">async</span> {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Placemark</span>> placemarks = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">placemarkFromCoordinates</span>(lat, long);\n\n    <span class=\"hljs-keyword\">var</span> address = <span class=\"hljs-string\">''</span>;\n\n    <span class=\"hljs-keyword\">if</span> (placemarks.<span class=\"hljs-property\">isNotEmpty</span>) {\n\n      <span class=\"hljs-comment\">// Address components without null values are concatenated</span>\n      <span class=\"hljs-keyword\">var</span> streets = placemarks.<span class=\"hljs-property\">reversed</span>\n          .<span class=\"hljs-title function_\">map</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">placemark</span>) =></span> placemark.<span class=\"hljs-property\">street</span>)\n          .<span class=\"hljs-title function_\">where</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">street</span>) =></span> street != <span class=\"hljs-literal\">null</span>);\n\n      <span class=\"hljs-comment\">// Unwanted parts are filtered out</span>\n      streets = streets.<span class=\"hljs-title function_\">where</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">street</span>) =></span>\n          street!.<span class=\"hljs-title function_\">toLowerCase</span>() !=\n          placemarks.<span class=\"hljs-property\">reversed</span>.<span class=\"hljs-property\">last</span>.<span class=\"hljs-property\">locality</span>!\n              .<span class=\"hljs-title function_\">toLowerCase</span>()); <span class=\"hljs-comment\">// Remove city names</span>\n      streets =\n          streets.<span class=\"hljs-title function_\">where</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">street</span>) =></span> !street!.<span class=\"hljs-title function_\">contains</span>(<span class=\"hljs-string\">'+'</span>)); <span class=\"hljs-comment\">// Remove street codes</span>\n\n      address += streets.<span class=\"hljs-title function_\">join</span>(<span class=\"hljs-string\">', '</span>);\n\n      address += <span class=\"hljs-string\">', ${placemarks.reversed.last.subLocality ?? '</span><span class=\"hljs-string\">'}'</span>;\n      address += <span class=\"hljs-string\">', ${placemarks.reversed.last.locality ?? '</span><span class=\"hljs-string\">'}'</span>;\n      address += <span class=\"hljs-string\">', ${placemarks.reversed.last.subAdministrativeArea ?? '</span><span class=\"hljs-string\">'}'</span>;\n      address += <span class=\"hljs-string\">', ${placemarks.reversed.last.administrativeArea ?? '</span><span class=\"hljs-string\">'}'</span>;\n      address += <span class=\"hljs-string\">', ${placemarks.reversed.last.postalCode ?? '</span><span class=\"hljs-string\">'}'</span>;\n      address += <span class=\"hljs-string\">', ${placemarks.reversed.last.country ?? '</span><span class=\"hljs-string\">'}'</span>;\n    }\n\n    <span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">\"Your Address for ($lat, $long) is: $address\"</span>);\n\n    <span class=\"hljs-keyword\">return</span> address;\n  } <span class=\"hljs-keyword\">catch</span> (e) {\n    <span class=\"hljs-title function_\">print</span>(<span class=\"hljs-string\">\"Error getting placemarks: $e\"</span>);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"No Address\"</span>;\n  }\n}\n</code></pre>\n<p>🧑🏿‍💻 Follow for more such blogs ☺️….</p>\n</body>\n</html>\n"},"__N_SSG":true}