{"pageProps":{"post":{"title":"플러터에서 Expansion Tile 사용 방법","description":"","date":"2024-06-21 20:50","slug":"2024-06-21-ExpansionTileinFlutter","content":"\n\n\n![Image](/assets/img/2024-06-21-ExpansionTileinFlutter_0.png)\n\n안녕하세요 독자 여러분, 이 기사에서는 플러터 앱에 확장 가능한 목록 타일을 추가하는 방법에 대해 알아보겠습니다. 이것은 우리가 목록 뷰에서 목록 타일을 사용하는 방식과 유사합니다. 따라서 시작하기 전에 오늘 어떤 것을 달성하고 싶은지 먼저 살펴보겠습니다.\n\n![Image](https://miro.medium.com/v2/resize:fit:700/0*SAyKoBHKRJMTrECc.gif)\n\n## 확장 타일이란 무엇인가요?\n\n\n<div class=\"content-ad\"></div>\n\n플러터에서의 확장 타일은 이미 리스트 뷰에서 사용해본 ListTile과 거의 비슷하지만, 유일한 차이점은 사용자가 타일을 확장하거나 축소하여 타일에 대한 자세한 정보를 볼 수 있다는 것입니다. 위 이미지에서 확장 타일의 예시를 볼 수 있어요.\n\n확장 타일은 주로 ListTile에 몇 가지 추가 정보를 추가하고 싶지만, 그 정보가 처음에는 필요하지 않을 때 사용됩니다. 사용자가 보고 싶을 때 볼 수 있어요.\n\n## ListView 만들기\n\n확장 리스트 뷰를 만들기 전에 기본 리스트 뷰와 리스트 타일만 있는 리스트 뷰를 만들어 볼게요. 이를 위해, 그냥 단순히 ListView.builder()를 scaffold의 body에 추가하면 돼요.\n\n<div class=\"content-ad\"></div>\n\n```dart\nclass HomeScreen extends StatelessWidget {\n  const HomeScreen({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n        appBar: AppBar(\n          title: const Text(\"\"),\n        ),\n        body: ListView.builder(\n          itemCount: 10,\n          itemBuilder: (context, index) {\n            return Card(\n              child: ListTile(\n                title: Text(\"사용자 $index\"),\n              ),\n            );\n          },\n        ));\n  }\n}\n```\n\n이제 리스트 뷰는 다음과 같이 보일 것입니다.\n\n![ExpansionTile in Flutter](/assets/img/2024-06-21-ExpansionTileinFlutter_1.png)\n\n## ListView에 ExpansionTile 추가하기\n\n<div class=\"content-ad\"></div>\n\n기본 목록 보기가 준비되었습니다. 목록의 항목을 확장 가능하게 만들려면 ListTile 위젯을 ExpansionTile로 변경하면 됩니다.\n\n```js\nbody: ListView.builder(\n    itemCount: 10,\n    itemBuilder: (context, index) {\n      return Card(\n        child: ExpansionTile(\n          title: Text(\"User $index\"),\n        ),\n      );\n    },\n```\n\nExpansionTile로 ListTile을 변경한 후에는 타일 끝에 화살표가 있는 것을 볼 수 있습니다. 이제 타일을 클릭하면 타일이 확장되고 강조 표시되며 화살표 방향이 바뀝니다.\n\n<img src=\"https://miro.medium.com/v2/resize:fit:600/0*dQi0SoELCTbErmxf.gif\" />\n\n<div class=\"content-ad\"></div>\n\n하지만 타일이 확장되면 아무것도 보이지 않습니다. 이는 ExpansionTile에서 children 매개변수를 제공해야하기 때문입니다. 우리가 children으로 전달하는 어떤 위젯이든, 타일을 확장할 때 표시됩니다.\n\n```js\n return Card(\n  child: ExpansionTile(\n    title: Text(\"User $index\"),\n    children: [\n      Text(\"Name : User $index\"),\n      Text(\"Phone No: $index\"),\n      const Text(\"isAdmin: No\")\n    ],\n  ),\n);\n```\n\n<img src=\"https://miro.medium.com/v2/resize:fit:700/0*SAyKoBHKRJMTrECc.gif\" />\n\n이제 우리의 목표가 달성되었습니다. 확장 가능한 자식을 가진 리스트 뷰입니다. 그러나 확장된 타일이 멋지지 않습니다. 그렇기 때문에 ExpansionTile 생성자에는 타일을 더 매력적으로 만들기 위해 사용할 수 있는 다른 매개변수들이 몇 가지 있습니다. 한 번 살펴보겠습니다.\n\n<div class=\"content-ad\"></div>\n\n## ExpansionTile 위젯의 매개변수\n\n생성자\n\n```js\n ExpansionTile({\n  Key? key,\n  Widget? leading,\n  required Widget title,\n  Widget? subtitle,\n  void Function(bool)? onExpansionChanged,\n  List<Widget> children = const <Widget>[],\n  Widget? trailing,\n  bool initiallyExpanded = false,\n  bool maintainState = false,\n  EdgeInsetsGeometry? tilePadding,\n  CrossAxisAlignment? expandedCrossAxisAlignment,\n  Alignment? expandedAlignment,\n  EdgeInsetsGeometry? childrenPadding,\n  Color? backgroundColor,\n  Color? collapsedBackgroundColor,\n  Color? textColor,\n  Color? collapsedTextColor,\n  Color? iconColor,\n  Color? collapsedIconColor,\n  ShapeBorder? shape,\n  ShapeBorder? collapsedShape,\n  Clip? clipBehavior,\n  ListTileControlAffinity? controlAffinity,\n})\n```\n\n위는 ExpansionTile 위젯의 생성자이며 대부분의 매개변수는 ListTile과 유사하지만 ExpansionTile에서 새로운 매개변수가 있습니다.\n\n<div class=\"content-ad\"></div>\n\nonExpansionChanged\n사용자가 타일을 클릭할 때 호출되는 함수입니다. 이 함수에는 Boolean isExpanded 매개변수가 전달됩니다. 사용자가 타일을 확장했다면 값은 true가 되고, 사용자가 타일을 축소했다면 값은 false가 됩니다.\n\n```js\nonExpansionChanged: (value) {\n  ScaffoldMessenger.of(context).showSnackBar(SnackBar(\n      content: Text(\n        \"$index 타일 ${value ? \"확장됨\" : \"축소됨\"}\")));\n},\n```\n\n<img src=\"https://miro.medium.com/v2/resize:fit:420/0*FcINjFqIXC2ok_q6.gif\" />\n\ninitiallyExpanded\n위젯의 첫 번째 빌드 시에 타일을 기본적으로 확장하는 경우 true를 전달하는 부울 변수입니다.\n\n<div class=\"content-ad\"></div>\n\n```dart\nExpansionTile(\n  title: Text(\"사용자 $index\"),\n  initiallyExpanded: index.isEven, // 모든 짝수 타일이 기본적으로 확장됨\n  children: [\n    Text(\"이름: 사용자 $index\"),\n    Text(\"전화번호: $index\"),\n    const Text(\"isAdmin: 아니요\")\n  ],\n),\n```\n\n![ExpansionTileinFlutter_2](/assets/img/2024-06-21-ExpansionTileinFlutter_2.png)\n\nmaintainState\n타일이 확장되고 축소될 때 체일드의 상태를 유지할지 여부를 지정합니다.\n\ntrue인 경우 타일이 축소될 때도 체일드는 트리에 유지됩니다. false인 경우 (기본값) 타일이 축소될 때 체일드가 트리에서 제거되고 확장 시에 다시 생성됩니다.\n\n<div class=\"content-ad\"></div>\n\nexpandedCrossAxisAlignment\n타일이 확장될 때 각 자식의 정렬을 지정합니다.\n\n확장된 타일의 내부에서는 [children]을 위해 [Column] 위젯을 사용하며, crossAxisAlignment 매개변수는 [Column]으로 직접 전달됩니다.\n\n```dart\nreturn Card(\n  child: ExpansionTile(\n    title: Text(\"User $index\"),\n    maintainState: true,\n    expandedCrossAxisAlignment: CrossAxisAlignment.end,\n    children: [\n      Row(\n        children: const [Text(\"This is a Row\")],\n      ),\n      Text(\"Name: User $index\"),\n      Text(\"Phone No: $index\"),\n      const Text(\"isAdmin: No\")\n    ],\n  ),\n);\n```\n\n<div class=\"content-ad\"></div>\n\nexpandedAlignment\n이 속성은 확장된 타일 내부의 자식 요소를 정렬합니다.\n\n```js\nExpansionTile(\n                title: Text(\"User $index\"),\n                maintainState: true,\n                expandedAlignment: Alignment.centerLeft,\n                children: [\n                  Text(\"Name : User $index\"),\n                  Text(\"Phone No: $index\"),\n                  const Text(\"isAdmin: No\")\n                ],\n              ),\n```\n\nchildrenPadding\n이름에서 알 수 있듯이 확장된 위젯 내 자식 요소 주위의 여백입니다.\n\nbackgroundColor 및 collapsedBackgroundColor\n이것은 타일이 축소되거나 확장되었을 때 적용되는 배경색입니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nreturn Card(\n              child: ExpansionTile(\n                title: Text(\"사용자 $index\"),\n                maintainState: true,\n                backgroundColor: Colors.red,\n                collapsedBackgroundColor: Colors.yellow,\n                children: [\n                  Text(\"이름: 사용자 $index\"),\n                  Text(\"전화번호: $index\"),\n                  const Text(\"관리자 권한: 아니요\")\n                ],\n              ),\n            );\n```\n\n<img src=\"https://miro.medium.com/v2/resize:fit:424/0*DuYJu0s-ySdjEb9V.gif\" />\n\ntextColor, collapsedTextColor, iconColor, collapsedIconColor\n이것은 타일이 확장되었거나 축소될 때 텍스트와 아이콘의 색상입니다.\n\n```js\nreturn Card(\n              child: ExpansionTile(\n                title: Text(\"사용자 $index\"),\n                maintainState: true,\n                textColor: Colors.red,\n                collapsedTextColor: Colors.yellow,\n                iconColor: Colors.red,\n                collapsedIconColor: Colors.yellow,\n                children: [\n                  Text(\"이름: 사용자 $index\"),\n                  Text(\"전화번호: $index\"),\n                  const Text(\"관리자 권한: 아니요\")\n                ],\n              ),\n            );\n``` \n\n\n<div class=\"content-ad\"></div>\n\nshape 및 collapsedShape\n이 매개변수를 사용하여 타일이 축소 또는 확장될 때 모양을 변경할 수 있습니다.\n\n```js\nreturn Padding(\n              padding: const EdgeInsets.all(8.0),\n              child: ExpansionTile(\n                title: Text(\"User $index\"),\n                maintainState: true,\n                backgroundColor: Colors.red,\n                collapsedBackgroundColor: Colors.yellow,\n                shape: const RoundedRectangleBorder(\n                    borderRadius: BorderRadius.all(Radius.circular(20))),\n                collapsedShape: const RoundedRectangleBorder(\n                    borderRadius: BorderRadius.all(Radius.circular(50))),\n                children: [\n                  Text(\"이름: User $index\"),\n                  Text(\"전화번호: $index\"),\n                  const Text(\"관리자: 아니요\")\n                ],\n              ),\n            );\n```\n\n![이미지](https://miro.medium.com/v2/resize:fit:424/0*NELwUxIbDKIkdFS-.gif)\n\ncontrolAffinity\n일반적으로 확장 화살표 아이콘을 타일의 선행 또는 후행 가장자리에 강제로 배치하는 데 사용됩니다.\n\n<div class=\"content-ad\"></div>\n\n기본적으로 [controlAffinity]의 값은 [ListTileControlAffinity.platform]이며, 이는 확장 화살표 아이콘이 타일의 뒷부분에 표시된다는 것을 의미합니다.\n\n## 결론\n\n요약하면, ExpansionTile 위젯은 Flutter 앱에서 확장 가능하고 접을 수 있는 콘텐츠를 생성하는 데 유용한 도구입니다. 몇 줄의 코드로 깔끔한 사용자 인터페이스를 만들어 사용자들이 쉽게 더 많은 정보에 액세스할 수 있도록 할 수 있습니다.\n\n이 기사가 ExpansionTile 위젯에 대한 유용한 소개를 제공하고 여러분이 자신의 Flutter 개발 프로젝트에 이를 통합하도록 영감을 주었기를 바랍니다.\n\n<div class=\"content-ad\"></div>\n\n# 함께해요\n\n이 글을 읽어 주셔서 감사합니다. 만약 마음에 드셨다면 더 많은 글을 읽어보고 저를 팔로우해주세요.\n\nhttps://www.linkedin.com/in/aakashpamnani/","ogImage":{"url":"/assets/img/2024-06-21-ExpansionTileinFlutter_0.png"},"coverImage":"/assets/img/2024-06-21-ExpansionTileinFlutter_0.png","tag":["Tech"],"readingTime":9},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-21-ExpansionTileinFlutter_0.png\" alt=\"Image\"></p>\n<p>안녕하세요 독자 여러분, 이 기사에서는 플러터 앱에 확장 가능한 목록 타일을 추가하는 방법에 대해 알아보겠습니다. 이것은 우리가 목록 뷰에서 목록 타일을 사용하는 방식과 유사합니다. 따라서 시작하기 전에 오늘 어떤 것을 달성하고 싶은지 먼저 살펴보겠습니다.</p>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:700/0*SAyKoBHKRJMTrECc.gif\" alt=\"Image\"></p>\n<h2>확장 타일이란 무엇인가요?</h2>\n<p>플러터에서의 확장 타일은 이미 리스트 뷰에서 사용해본 ListTile과 거의 비슷하지만, 유일한 차이점은 사용자가 타일을 확장하거나 축소하여 타일에 대한 자세한 정보를 볼 수 있다는 것입니다. 위 이미지에서 확장 타일의 예시를 볼 수 있어요.</p>\n<p>확장 타일은 주로 ListTile에 몇 가지 추가 정보를 추가하고 싶지만, 그 정보가 처음에는 필요하지 않을 때 사용됩니다. 사용자가 보고 싶을 때 볼 수 있어요.</p>\n<h2>ListView 만들기</h2>\n<p>확장 리스트 뷰를 만들기 전에 기본 리스트 뷰와 리스트 타일만 있는 리스트 뷰를 만들어 볼게요. 이를 위해, 그냥 단순히 ListView.builder()를 scaffold의 body에 추가하면 돼요.</p>\n<pre><code class=\"hljs language-dart\"><span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">HomeScreen</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">StatelessWidget</span> </span>{\n  <span class=\"hljs-keyword\">const</span> HomeScreen({Key? key}) : <span class=\"hljs-keyword\">super</span>(key: key);\n\n  <span class=\"hljs-meta\">@override</span>\n  Widget build(BuildContext context) {\n    <span class=\"hljs-keyword\">return</span> Scaffold(\n        appBar: AppBar(\n          title: <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">\"\"</span>),\n        ),\n        body: ListView.builder(\n          itemCount: <span class=\"hljs-number\">10</span>,\n          itemBuilder: (context, index) {\n            <span class=\"hljs-keyword\">return</span> Card(\n              child: ListTile(\n                title: Text(<span class=\"hljs-string\">\"사용자 <span class=\"hljs-subst\">$index</span>\"</span>),\n              ),\n            );\n          },\n        ));\n  }\n}\n</code></pre>\n<p>이제 리스트 뷰는 다음과 같이 보일 것입니다.</p>\n<p><img src=\"/assets/img/2024-06-21-ExpansionTileinFlutter_1.png\" alt=\"ExpansionTile in Flutter\"></p>\n<h2>ListView에 ExpansionTile 추가하기</h2>\n<p>기본 목록 보기가 준비되었습니다. 목록의 항목을 확장 가능하게 만들려면 ListTile 위젯을 ExpansionTile로 변경하면 됩니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">body</span>: <span class=\"hljs-title class_\">ListView</span>.<span class=\"hljs-title function_\">builder</span>(\n    <span class=\"hljs-attr\">itemCount</span>: <span class=\"hljs-number\">10</span>,\n    <span class=\"hljs-attr\">itemBuilder</span>: (context, index) {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Card</span>(\n        <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">ExpansionTile</span>(\n          <span class=\"hljs-attr\">title</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"User $index\"</span>),\n        ),\n      );\n    },\n</code></pre>\n<p>ExpansionTile로 ListTile을 변경한 후에는 타일 끝에 화살표가 있는 것을 볼 수 있습니다. 이제 타일을 클릭하면 타일이 확장되고 강조 표시되며 화살표 방향이 바뀝니다.</p>\n<p>하지만 타일이 확장되면 아무것도 보이지 않습니다. 이는 ExpansionTile에서 children 매개변수를 제공해야하기 때문입니다. 우리가 children으로 전달하는 어떤 위젯이든, 타일을 확장할 때 표시됩니다.</p>\n<pre><code class=\"hljs language-js\"> <span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Card</span>(\n  <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">ExpansionTile</span>(\n    <span class=\"hljs-attr\">title</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"User $index\"</span>),\n    <span class=\"hljs-attr\">children</span>: [\n      <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"Name : User $index\"</span>),\n      <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"Phone No: $index\"</span>),\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"isAdmin: No\"</span>)\n    ],\n  ),\n);\n</code></pre>\n<p>이제 우리의 목표가 달성되었습니다. 확장 가능한 자식을 가진 리스트 뷰입니다. 그러나 확장된 타일이 멋지지 않습니다. 그렇기 때문에 ExpansionTile 생성자에는 타일을 더 매력적으로 만들기 위해 사용할 수 있는 다른 매개변수들이 몇 가지 있습니다. 한 번 살펴보겠습니다.</p>\n<h2>ExpansionTile 위젯의 매개변수</h2>\n<p>생성자</p>\n<pre><code class=\"hljs language-js\"> <span class=\"hljs-title class_\">ExpansionTile</span>({\n  <span class=\"hljs-title class_\">Key</span>? key,\n  <span class=\"hljs-title class_\">Widget</span>? leading,\n  required <span class=\"hljs-title class_\">Widget</span> title,\n  <span class=\"hljs-title class_\">Widget</span>? subtitle,\n  <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title class_\">Function</span>(bool)? onExpansionChanged,\n  <span class=\"hljs-title class_\">List</span>&#x3C;<span class=\"hljs-title class_\">Widget</span>> children = <span class=\"hljs-keyword\">const</span> &#x3C;<span class=\"hljs-title class_\">Widget</span>>[],\n  <span class=\"hljs-title class_\">Widget</span>? trailing,\n  bool initiallyExpanded = <span class=\"hljs-literal\">false</span>,\n  bool maintainState = <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-title class_\">EdgeInsetsGeometry</span>? tilePadding,\n  <span class=\"hljs-title class_\">CrossAxisAlignment</span>? expandedCrossAxisAlignment,\n  <span class=\"hljs-title class_\">Alignment</span>? expandedAlignment,\n  <span class=\"hljs-title class_\">EdgeInsetsGeometry</span>? childrenPadding,\n  <span class=\"hljs-title class_\">Color</span>? backgroundColor,\n  <span class=\"hljs-title class_\">Color</span>? collapsedBackgroundColor,\n  <span class=\"hljs-title class_\">Color</span>? textColor,\n  <span class=\"hljs-title class_\">Color</span>? collapsedTextColor,\n  <span class=\"hljs-title class_\">Color</span>? iconColor,\n  <span class=\"hljs-title class_\">Color</span>? collapsedIconColor,\n  <span class=\"hljs-title class_\">ShapeBorder</span>? shape,\n  <span class=\"hljs-title class_\">ShapeBorder</span>? collapsedShape,\n  <span class=\"hljs-title class_\">Clip</span>? clipBehavior,\n  <span class=\"hljs-title class_\">ListTileControlAffinity</span>? controlAffinity,\n})\n</code></pre>\n<p>위는 ExpansionTile 위젯의 생성자이며 대부분의 매개변수는 ListTile과 유사하지만 ExpansionTile에서 새로운 매개변수가 있습니다.</p>\n<p>onExpansionChanged\n사용자가 타일을 클릭할 때 호출되는 함수입니다. 이 함수에는 Boolean isExpanded 매개변수가 전달됩니다. 사용자가 타일을 확장했다면 값은 true가 되고, 사용자가 타일을 축소했다면 값은 false가 됩니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">onExpansionChanged</span>: (value) {\n  <span class=\"hljs-title class_\">ScaffoldMessenger</span>.<span class=\"hljs-title function_\">of</span>(context).<span class=\"hljs-title function_\">showSnackBar</span>(<span class=\"hljs-title class_\">SnackBar</span>(\n      <span class=\"hljs-attr\">content</span>: <span class=\"hljs-title class_\">Text</span>(\n        <span class=\"hljs-string\">\"$index 타일 ${value ? \"</span>확장됨<span class=\"hljs-string\">\" : \"</span>축소됨<span class=\"hljs-string\">\"}\"</span>)));\n},\n</code></pre>\n<p>initiallyExpanded\n위젯의 첫 번째 빌드 시에 타일을 기본적으로 확장하는 경우 true를 전달하는 부울 변수입니다.</p>\n<pre><code class=\"hljs language-dart\">ExpansionTile(\n  title: Text(<span class=\"hljs-string\">\"사용자 <span class=\"hljs-subst\">$index</span>\"</span>),\n  initiallyExpanded: index.isEven, <span class=\"hljs-comment\">// 모든 짝수 타일이 기본적으로 확장됨</span>\n  children: [\n    Text(<span class=\"hljs-string\">\"이름: 사용자 <span class=\"hljs-subst\">$index</span>\"</span>),\n    Text(<span class=\"hljs-string\">\"전화번호: <span class=\"hljs-subst\">$index</span>\"</span>),\n    <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">\"isAdmin: 아니요\"</span>)\n  ],\n),\n</code></pre>\n<p><img src=\"/assets/img/2024-06-21-ExpansionTileinFlutter_2.png\" alt=\"ExpansionTileinFlutter_2\"></p>\n<p>maintainState\n타일이 확장되고 축소될 때 체일드의 상태를 유지할지 여부를 지정합니다.</p>\n<p>true인 경우 타일이 축소될 때도 체일드는 트리에 유지됩니다. false인 경우 (기본값) 타일이 축소될 때 체일드가 트리에서 제거되고 확장 시에 다시 생성됩니다.</p>\n<p>expandedCrossAxisAlignment\n타일이 확장될 때 각 자식의 정렬을 지정합니다.</p>\n<p>확장된 타일의 내부에서는 [children]을 위해 [Column] 위젯을 사용하며, crossAxisAlignment 매개변수는 [Column]으로 직접 전달됩니다.</p>\n<pre><code class=\"hljs language-dart\"><span class=\"hljs-keyword\">return</span> Card(\n  child: ExpansionTile(\n    title: Text(<span class=\"hljs-string\">\"User <span class=\"hljs-subst\">$index</span>\"</span>),\n    maintainState: <span class=\"hljs-keyword\">true</span>,\n    expandedCrossAxisAlignment: CrossAxisAlignment.end,\n    children: [\n      Row(\n        children: <span class=\"hljs-keyword\">const</span> [Text(<span class=\"hljs-string\">\"This is a Row\"</span>)],\n      ),\n      Text(<span class=\"hljs-string\">\"Name: User <span class=\"hljs-subst\">$index</span>\"</span>),\n      Text(<span class=\"hljs-string\">\"Phone No: <span class=\"hljs-subst\">$index</span>\"</span>),\n      <span class=\"hljs-keyword\">const</span> Text(<span class=\"hljs-string\">\"isAdmin: No\"</span>)\n    ],\n  ),\n);\n</code></pre>\n<p>expandedAlignment\n이 속성은 확장된 타일 내부의 자식 요소를 정렬합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-title class_\">ExpansionTile</span>(\n                <span class=\"hljs-attr\">title</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"User $index\"</span>),\n                <span class=\"hljs-attr\">maintainState</span>: <span class=\"hljs-literal\">true</span>,\n                <span class=\"hljs-attr\">expandedAlignment</span>: <span class=\"hljs-title class_\">Alignment</span>.<span class=\"hljs-property\">centerLeft</span>,\n                <span class=\"hljs-attr\">children</span>: [\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"Name : User $index\"</span>),\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"Phone No: $index\"</span>),\n                  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"isAdmin: No\"</span>)\n                ],\n              ),\n</code></pre>\n<p>childrenPadding\n이름에서 알 수 있듯이 확장된 위젯 내 자식 요소 주위의 여백입니다.</p>\n<p>backgroundColor 및 collapsedBackgroundColor\n이것은 타일이 축소되거나 확장되었을 때 적용되는 배경색입니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Card</span>(\n              <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">ExpansionTile</span>(\n                <span class=\"hljs-attr\">title</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"사용자 $index\"</span>),\n                <span class=\"hljs-attr\">maintainState</span>: <span class=\"hljs-literal\">true</span>,\n                <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">red</span>,\n                <span class=\"hljs-attr\">collapsedBackgroundColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">yellow</span>,\n                <span class=\"hljs-attr\">children</span>: [\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"이름: 사용자 $index\"</span>),\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"전화번호: $index\"</span>),\n                  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"관리자 권한: 아니요\"</span>)\n                ],\n              ),\n            );\n</code></pre>\n<p>textColor, collapsedTextColor, iconColor, collapsedIconColor\n이것은 타일이 확장되었거나 축소될 때 텍스트와 아이콘의 색상입니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Card</span>(\n              <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">ExpansionTile</span>(\n                <span class=\"hljs-attr\">title</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"사용자 $index\"</span>),\n                <span class=\"hljs-attr\">maintainState</span>: <span class=\"hljs-literal\">true</span>,\n                <span class=\"hljs-attr\">textColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">red</span>,\n                <span class=\"hljs-attr\">collapsedTextColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">yellow</span>,\n                <span class=\"hljs-attr\">iconColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">red</span>,\n                <span class=\"hljs-attr\">collapsedIconColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">yellow</span>,\n                <span class=\"hljs-attr\">children</span>: [\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"이름: 사용자 $index\"</span>),\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"전화번호: $index\"</span>),\n                  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"관리자 권한: 아니요\"</span>)\n                ],\n              ),\n            );\n</code></pre>\n<p>shape 및 collapsedShape\n이 매개변수를 사용하여 타일이 축소 또는 확장될 때 모양을 변경할 수 있습니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">return</span> <span class=\"hljs-title class_\">Padding</span>(\n              <span class=\"hljs-attr\">padding</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">EdgeInsets</span>.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-number\">8.0</span>),\n              <span class=\"hljs-attr\">child</span>: <span class=\"hljs-title class_\">ExpansionTile</span>(\n                <span class=\"hljs-attr\">title</span>: <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"User $index\"</span>),\n                <span class=\"hljs-attr\">maintainState</span>: <span class=\"hljs-literal\">true</span>,\n                <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">red</span>,\n                <span class=\"hljs-attr\">collapsedBackgroundColor</span>: <span class=\"hljs-title class_\">Colors</span>.<span class=\"hljs-property\">yellow</span>,\n                <span class=\"hljs-attr\">shape</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">RoundedRectangleBorder</span>(\n                    <span class=\"hljs-attr\">borderRadius</span>: <span class=\"hljs-title class_\">BorderRadius</span>.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-title class_\">Radius</span>.<span class=\"hljs-title function_\">circular</span>(<span class=\"hljs-number\">20</span>))),\n                <span class=\"hljs-attr\">collapsedShape</span>: <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">RoundedRectangleBorder</span>(\n                    <span class=\"hljs-attr\">borderRadius</span>: <span class=\"hljs-title class_\">BorderRadius</span>.<span class=\"hljs-title function_\">all</span>(<span class=\"hljs-title class_\">Radius</span>.<span class=\"hljs-title function_\">circular</span>(<span class=\"hljs-number\">50</span>))),\n                <span class=\"hljs-attr\">children</span>: [\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"이름: User $index\"</span>),\n                  <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"전화번호: $index\"</span>),\n                  <span class=\"hljs-keyword\">const</span> <span class=\"hljs-title class_\">Text</span>(<span class=\"hljs-string\">\"관리자: 아니요\"</span>)\n                ],\n              ),\n            );\n</code></pre>\n<p><img src=\"https://miro.medium.com/v2/resize:fit:424/0*NELwUxIbDKIkdFS-.gif\" alt=\"이미지\"></p>\n<p>controlAffinity\n일반적으로 확장 화살표 아이콘을 타일의 선행 또는 후행 가장자리에 강제로 배치하는 데 사용됩니다.</p>\n<p>기본적으로 [controlAffinity]의 값은 [ListTileControlAffinity.platform]이며, 이는 확장 화살표 아이콘이 타일의 뒷부분에 표시된다는 것을 의미합니다.</p>\n<h2>결론</h2>\n<p>요약하면, ExpansionTile 위젯은 Flutter 앱에서 확장 가능하고 접을 수 있는 콘텐츠를 생성하는 데 유용한 도구입니다. 몇 줄의 코드로 깔끔한 사용자 인터페이스를 만들어 사용자들이 쉽게 더 많은 정보에 액세스할 수 있도록 할 수 있습니다.</p>\n<p>이 기사가 ExpansionTile 위젯에 대한 유용한 소개를 제공하고 여러분이 자신의 Flutter 개발 프로젝트에 이를 통합하도록 영감을 주었기를 바랍니다.</p>\n<h1>함께해요</h1>\n<p>이 글을 읽어 주셔서 감사합니다. 만약 마음에 드셨다면 더 많은 글을 읽어보고 저를 팔로우해주세요.</p>\n<p><a href=\"https://www.linkedin.com/in/aakashpamnani/\" rel=\"nofollow\" target=\"_blank\">https://www.linkedin.com/in/aakashpamnani/</a></p>\n</body>\n</html>\n"},"__N_SSG":true}