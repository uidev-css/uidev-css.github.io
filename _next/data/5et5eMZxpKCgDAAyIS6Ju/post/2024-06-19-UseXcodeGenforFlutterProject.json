{"pageProps":{"post":{"title":"XcodeGen을 Flutter 프로젝트에 활용해보세요","description":"","date":"2024-06-19 14:26","slug":"2024-06-19-UseXcodeGenforFlutterProject","content":"\n\n# 소개\n\n저는 Flutter용 XcodeGen을 사용하여 ios/Runner.xcodeproj를 생성하는 샘플 리포지토리를 만들었습니다.\n\nproject.yml은 두 가지 flavor dev 및 prd 간에 다음을 전환할 수 있도록 구성되어 있습니다:\n- 앱 아이콘\n- 앱 표시 이름\n- 번들 식별자\n- Firebase 프로젝트\n\n# project.pbxproj의 고통\n\n<div class=\"content-ad\"></div>\n\nFlutter로 iOS 앱을 개발할 때가 있습니다. Xcode에서 열고 편집해야 할 때가 있습니다. Xcode의 GUI로 편집한 후에는 ios/Runner.xcodeproj/project.pbxproj와 같이 이해하기 어려운 차이점을 볼 수도 있습니다:\n\n![차이점](/assets/img/2024-06-19-UseXcodeGenforFlutterProject_0.png)\n\niOS 개발에서 Xcode를 사용하는 여러 사람은 종종 이 파일에서 충돌을 일으킵니다. 이 문제를 해결하는 도구 중 하나가 XcodeGen입니다.\n\n# XcodeGen이란?\n\n<div class=\"content-ad\"></div>\n\nXcodeGen은 project.yml과 같은 yml 파일로부터 .xcodeproj를 생성하는 도구입니다. Flutter에서는 ios/Runner.xcodeproj 하위에 생성된 파일들이 해당 범주에 속합니다.\n\n```js\nyaml:project.yml\nname: Runner\noptions:\n  xcodeVersion: '15.4.0'\n  developmentLanguage: ja\n  deploymentTarget:\n    iOS: 16.0\ninclude:\n  - xcodegen/setting/base.yml\nconfigs:\n  Debug: Debug\n  Debug-dev: Debug-dev\n  Debug-prd: Debug-prd\n  Profile: Profile\n  Profile-dev: Profile-dev\n  Profile-prd: Profile-prd\n  Release: Release\n  Release-dev: Release-dev\n  Release-prd: Release-prd\n...\n```\n\nXcodeGen의 자세한 사용법 및 설명은 많은 기사들을 참고해주시기 바랍니다.\n\n# SPM (Swift Package Manager)와의 비교\n\n<div class=\"content-ad\"></div>\n\n2024 년 6 월 기준으로 SPM 사용이 iOS 커뮤니티에서 비슷한 문제에 대한 솔루션으로 더 인기가 있어지고 있습니다. Flutter에는 SPM 지원을 위한 PR도 있습니다.\n그러나 Flutter v3.22.0에서는 사용할 수 없고, 패키지가 지원하지 않으면 CocoaPods를 함께 사용해야 하기 때문에 이번에는 채택하지 않았습니다.\n\n# Flutter 개발에서 XcodeGen 사용\n\nFlutter 개발에서 project.pbxproj은 드물게 충돌하지만, 차이가 복잡할 수 있어 PR 리뷰를 어렵게 만들 수 있습니다. 대부분의 XcodeGen 관련 문서 및 정보는 네이티브 iOS 개발을 대상으로 하기 때문에, Flutter 개발에서 XcodeGen을 사용하기 위한 샘플 저장소를 만들었습니다.\n\n이 저장소는 두 가지 flavor, 개발 및 프로덕션,을 가진 Flutter 앱을 위해 project.yml을 생성하여 .xcodeproj를 생성합니다. 일반적인 Flutter 사용 사례를 가정하여 다음 요소를 각 flavor에 나누어 분리합니다:\n- 앱 아이콘\n- 앱 표시 이름\n- 번들 ID\n- Firebase 프로젝트사용은 간단합니다; .tool-versions에 정의된 도구를 준비한 후, 다음 명령을 실행하여 .xcodeproj를 생성하고 앱을 실행할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n```js\nsh\ncd ios && xcodegen generate\nflutter run --flavor dev(or prd)\n```\n\n# XcodeGen 파일 구조\n\nXcodeGen과 관련된 파일 구조는 다음과 같습니다:\n\n```js\nios\n├── project.yml\n└── xcodegen\n   ├── script\n   │ ├── check_pods_manifest.sh\n   │ ├── copy_pods_resources.sh\n   │ ├── crashlytics_upload_symbols.sh\n   │ ├── embed_pods_frameworks.sh\n   │ ├── run_script.sh\n   │ ├── select_google_service_info_plist.sh\n   │ └── thin_binary.sh\n   └── setting\n      ├── base.yml\n      ├── debug-dev.yml\n      ├── debug-prd.yml\n      ├── debug.yml\n      ├── profile-dev.yml\n      ├── profile-prd.yml\n      ├── profile.yml\n      ├── release-dev.yml\n      ├── release-prd.yml\n      └── release.yml\n```\n\n<div class=\"content-ad\"></div>\n\nios/xcodegen/script/ 디렉토리에서는 Xcode의 Build Phases 탭에 정의된 스크립트가 추출됩니다.\n\n```js\n#!/bin/sh\n\n/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" build\n```\n\n![이미지](/assets/img/2024-06-19-UseXcodeGenforFlutterProject_1.png)\n\nios/xcodegen/setting/ 디렉토리에는 각 구성에 대한 빌드 설정 탭 내용이 설명되어 있습니다. base.yml은 각 구성에 대한 값의 포함과 공통 설정의 설명을 처리합니다.\n\n<div class=\"content-ad\"></div>\n\n해당 main project.yml 파일의 전체 구조는 다음과 같습니다. 각 항목의 상세 설명은 공식 문서를 참조해주세요.\n\n```yaml\nname: Runner\n\noptions:\n  xcodeVersion: '15.4.0'\n  developmentLanguage: ja\n  deploymentTarget:\n    iOS: 16.0\n\ninclude:\n  - xcodegen/setting/base.yml\n\nconfigs:\n  Debug: Debug\n  Debug-dev: Debug-dev\n  Debug-prd: Debug-prd\n  Profile: Profile\n  Profile-dev: Profile-dev\n  Profile-prd: Profile-prd\n  Release: Release\n  Release-dev: Release-dev\n  Release-prd: Release-prd\n\ntargets:\n  Runner:\n    type: application\n    platform: iOS\n    configFiles:\n      Debug: Flutter/Debug.xcconfig\n      Debug-dev: Flutter/Debug.xcconfig\n      Debug-prd: Flutter/Debug.xcconfig\n      Profile: Flutter/Profile.xcconfig\n      Profile-dev: Flutter/Profile.xcconfig\n      Profile-prd: Flutter/Profile.xcconfig\n      Release: Flutter/Release.xcconfig\n      Release-dev: Flutter/Release.xcconfig\n      Release-prd: Flutter/Release.xcconfig\n\n    sources:\n      # - GoogleService-Info.plist\n      - Flutter/AppFrameworkInfo.plist\n      - Flutter/Generated.xcconfig\n      - Flutter/Debug.xcconfig\n      - Flutter/Profile.xcconfig\n      - Flutter/Release.xcconfig\n      - path: Runner/\n\n    dependencies:\n      - sdk: Pods_Runner.framework\n        embed: false\n        link: true\n\n    preBuildScripts:\n      - name: '[CP] Check Pods Manifest.lock'\n        path: xcodegen/script/check_pods_manifest.sh\n        inputFiles:\n          - ${PODS_PODFILE_DIR_PATH}/Podfile.lock\n          - ${PODS_ROOT}/Manifest.lock\n        outputFiles:\n          - $(DERIVED_FILE_DIR)/Pods-Runner-checkManifestLockResult.txt\n      - name: Run Script\n        path: xcodegen/script/run_script.sh\n\n    # If you use different Firebase Project for each environment, you can use this script.\n    # postCompileScripts:\n    #   - name: Select GoogleService-Info.plist\n    #     path: xcodegen/script/select_google_service_info_plist.sh\n    #     outputFiles:\n    #       - ${SRCROOT}/GoogleService-Info.plist\n\n    postBuildScripts:\n      - name: Thin Binary\n        path: xcodegen/script/thin_binary.sh\n        inputFiles:\n          - ${TARGET_BUILD_DIR}/${INFOPLIST_PATH}\n\n      # If you use Firebase Crashlytics, you can use this script.\n      # - name: '[firebase_crashlytics] Crashlytics Upload Symbols'\n      #   path: xcodegen/script/crashlytics_upload_symbols.sh\n      #   inputFiles:\n      #     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}\n      #     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${PRODUCT_NAME}\n      #     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\n      #     - $(TARGET_BUILD_DIR)/$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/GoogleService-Info.plist\n      #     - $(TARGET_BUILD_DIR)/$(EXECUTABLE_PATH)\n\n\n    settings:\n      base:\n        ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS: NO\n        CLANG_ENABLE_MODULES: YES\n        CURRENT_PROJECT_VERSION: '$(FLUTTER_BUILD_NUMBER)'\n        # TODO: DEVELOPMENT_TEAM\n        # DEVELOPMENT_TEAM: YOUR_TEAM_ID\n        ENABLE_BITCODE: NO\n        INFOPLIST_FILE: Runner/Info.plist\n        SWIFT_OBJC_BRIDGING_HEADER: 'Runner/Runner-Bridging-Header.h'\n        SWIFT_VERSION: 5.0\n        VERSIONING_SYSTEM: 'apple-generic'\n      configs:\n        Profile-prd:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-prd'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample\n          PRODUCT_NAME: 'PRD'\n\n        Profile-dev:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-dev'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample.dev\n          PRODUCT_NAME: 'DEV'\n\n        Release-prd:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-prd'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample\n          PRODUCT_NAME: 'PRD'\n\n        Release-dev:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-dev'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample.dev\n          PRODUCT_NAME: 'DEV'\n\n        Debug-prd:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-prd'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample\n          PRODUCT_NAME: 'PRD'\n          SWIFT_OPTIMIZATION_LEVEL: '-Onone'\n\n        Debug-dev:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-dev'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample.dev\n          PRODUCT_NAME: 'DEV'\n          SWIFT_OPTIMIZATION_LEVEL: '-Onone'\n\n        Debug:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-prd'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample\n          PRODUCT_NAME: 'NONE'\n          SWIFT_OPTIMIZATION_LEVEL: '-Onone'\n\n        Release:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-prd'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample\n          PRODUCT_NAME: 'NONE'\n\n        Profile:\n          ASSETCATALOG_COMPILER_APPICON_NAME: 'AppIcon-prd'\n          PRODUCT_BUNDLE_IDENTIFIER: com.example.flutterXcodegenSample\n          PRODUCT_NAME: 'NONE'\n\n\nschemes:\n  Runner:\n    build:\n      targets:\n        Runner: all\n    run:\n      config: Debug\n    test:\n      config: Debug\n    profile:\n      config: Profile\n    analyze:\n      config: Debug\n    archive:\n      config: Release\n  dev:\n    build:\n      targets:\n        Runner: all\n    run:\n      config: Debug-dev\n    test:\n      config: Debug-dev\n    profile:\n      config: Profile-dev\n    analyze:\n      config: Debug-dev\n    archive:\n      config: Release-dev\n  prd:\n    build:\n      targets:\n        Runner: all\n    run:\n      config: Debug-prd\n    test:\n      config: Debug-prd\n    profile:\n      config: Profile-prd\n    analyze:\n      config: Debug-prd\n    archive:\n      config: Release-prd\r\n```\n\n<div class=\"content-ad\"></div>\n\n파이어베이스 프로젝트 설정을 완료한 후, 각 flavor에 사용하려는 GoogleService-Info.plist를 ios/GoogleService/'Flavor' 아래에 배치하세요. 또한, 빌드 중에 각 flavor용 GoogleService-Info.plist를 ios/로 복사하는 스크립트를 실행해야 합니다. 이 설정들은 주석 처리되어 있으므로 필요에 따라 주석을 해제해주세요.\n\n```js\n# 각 환경에 별도의 Firebase 프로젝트를 사용하는 경우, 다음 스크립트를 사용할 수 있습니다.\n# postCompileScripts:\n#   - name: Select GoogleService-Info.plist\n#     path: xcodegen/script/select_google_service_info_plist.sh\n#     outputFiles:\n#       - ${SRCROOT}/GoogleService-Info.plist\n## Firebase Crashlytics를 사용할 때\n```\n\n콘솔 로그를 더 가독성 있게 만들기 위해, postBuildPhase에 dSYM을 업로드해야 합니다. 이 또한 주석 처리되어 있으니 필요에 따라 주석을 해제해주세요.\n\n```js\n# Firebase Crashlytics를 사용한다면, 다음 스크립트를 사용할 수 있습니다.\n# - name: '[firebase_crashlytics] Crashlytics Upload Symbols'\n#   path: xcodegen/script/crashlytics_upload_symbols.sh\n#   inputFiles:\n#     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}\n#     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${PRODUCT_NAME}\n#     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist\n#     - $(TARGET_BUILD_DIR)/$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/GoogleService-Info.plist\n#     - $(TARGET_BUILD_DIR)/$(EXECUTABLE_PATH)\n```\n\n<div class=\"content-ad\"></div>\n\n# 결론\n\n처음에 XcodeGen을 이해하는 것은 어려울 수 있지만, 이 문서가 도움이 되기를 바랍니다! 모든 지침에 대해 cokaholic🐰🍁☄️🪐에게 특별히 감사드립니다!","ogImage":{"url":"/assets/img/2024-06-19-UseXcodeGenforFlutterProject_0.png"},"coverImage":"/assets/img/2024-06-19-UseXcodeGenforFlutterProject_0.png","tag":["Tech"],"readingTime":10},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<h1>소개</h1>\n<p>저는 Flutter용 XcodeGen을 사용하여 ios/Runner.xcodeproj를 생성하는 샘플 리포지토리를 만들었습니다.</p>\n<p>project.yml은 두 가지 flavor dev 및 prd 간에 다음을 전환할 수 있도록 구성되어 있습니다:</p>\n<ul>\n<li>앱 아이콘</li>\n<li>앱 표시 이름</li>\n<li>번들 식별자</li>\n<li>Firebase 프로젝트</li>\n</ul>\n<h1>project.pbxproj의 고통</h1>\n<div class=\"content-ad\"></div>\n<p>Flutter로 iOS 앱을 개발할 때가 있습니다. Xcode에서 열고 편집해야 할 때가 있습니다. Xcode의 GUI로 편집한 후에는 ios/Runner.xcodeproj/project.pbxproj와 같이 이해하기 어려운 차이점을 볼 수도 있습니다:</p>\n<p><img src=\"/assets/img/2024-06-19-UseXcodeGenforFlutterProject_0.png\" alt=\"차이점\"></p>\n<p>iOS 개발에서 Xcode를 사용하는 여러 사람은 종종 이 파일에서 충돌을 일으킵니다. 이 문제를 해결하는 도구 중 하나가 XcodeGen입니다.</p>\n<h1>XcodeGen이란?</h1>\n<div class=\"content-ad\"></div>\n<p>XcodeGen은 project.yml과 같은 yml 파일로부터 .xcodeproj를 생성하는 도구입니다. Flutter에서는 ios/Runner.xcodeproj 하위에 생성된 파일들이 해당 범주에 속합니다.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-attr\">yaml</span>:project.<span class=\"hljs-property\">yml</span>\n<span class=\"hljs-attr\">name</span>: <span class=\"hljs-title class_\">Runner</span>\n<span class=\"hljs-attr\">options</span>:\n  <span class=\"hljs-attr\">xcodeVersion</span>: <span class=\"hljs-string\">'15.4.0'</span>\n  <span class=\"hljs-attr\">developmentLanguage</span>: ja\n  <span class=\"hljs-attr\">deploymentTarget</span>:\n    <span class=\"hljs-attr\">iOS</span>: <span class=\"hljs-number\">16.0</span>\n<span class=\"hljs-attr\">include</span>:\n  - xcodegen/setting/base.<span class=\"hljs-property\">yml</span>\n<span class=\"hljs-attr\">configs</span>:\n  <span class=\"hljs-title class_\">Debug</span>: <span class=\"hljs-title class_\">Debug</span>\n  <span class=\"hljs-title class_\">Debug</span>-<span class=\"hljs-attr\">dev</span>: <span class=\"hljs-title class_\">Debug</span>-dev\n  <span class=\"hljs-title class_\">Debug</span>-<span class=\"hljs-attr\">prd</span>: <span class=\"hljs-title class_\">Debug</span>-prd\n  <span class=\"hljs-title class_\">Profile</span>: <span class=\"hljs-title class_\">Profile</span>\n  <span class=\"hljs-title class_\">Profile</span>-<span class=\"hljs-attr\">dev</span>: <span class=\"hljs-title class_\">Profile</span>-dev\n  <span class=\"hljs-title class_\">Profile</span>-<span class=\"hljs-attr\">prd</span>: <span class=\"hljs-title class_\">Profile</span>-prd\n  <span class=\"hljs-title class_\">Release</span>: <span class=\"hljs-title class_\">Release</span>\n  <span class=\"hljs-title class_\">Release</span>-<span class=\"hljs-attr\">dev</span>: <span class=\"hljs-title class_\">Release</span>-dev\n  <span class=\"hljs-title class_\">Release</span>-<span class=\"hljs-attr\">prd</span>: <span class=\"hljs-title class_\">Release</span>-prd\n...\n</code></pre>\n<p>XcodeGen의 자세한 사용법 및 설명은 많은 기사들을 참고해주시기 바랍니다.</p>\n<h1>SPM (Swift Package Manager)와의 비교</h1>\n<div class=\"content-ad\"></div>\n<p>2024 년 6 월 기준으로 SPM 사용이 iOS 커뮤니티에서 비슷한 문제에 대한 솔루션으로 더 인기가 있어지고 있습니다. Flutter에는 SPM 지원을 위한 PR도 있습니다.\n그러나 Flutter v3.22.0에서는 사용할 수 없고, 패키지가 지원하지 않으면 CocoaPods를 함께 사용해야 하기 때문에 이번에는 채택하지 않았습니다.</p>\n<h1>Flutter 개발에서 XcodeGen 사용</h1>\n<p>Flutter 개발에서 project.pbxproj은 드물게 충돌하지만, 차이가 복잡할 수 있어 PR 리뷰를 어렵게 만들 수 있습니다. 대부분의 XcodeGen 관련 문서 및 정보는 네이티브 iOS 개발을 대상으로 하기 때문에, Flutter 개발에서 XcodeGen을 사용하기 위한 샘플 저장소를 만들었습니다.</p>\n<p>이 저장소는 두 가지 flavor, 개발 및 프로덕션,을 가진 Flutter 앱을 위해 project.yml을 생성하여 .xcodeproj를 생성합니다. 일반적인 Flutter 사용 사례를 가정하여 다음 요소를 각 flavor에 나누어 분리합니다:</p>\n<ul>\n<li>앱 아이콘</li>\n<li>앱 표시 이름</li>\n<li>번들 ID</li>\n<li>Firebase 프로젝트사용은 간단합니다; .tool-versions에 정의된 도구를 준비한 후, 다음 명령을 실행하여 .xcodeproj를 생성하고 앱을 실행할 수 있습니다.</li>\n</ul>\n<div class=\"content-ad\"></div>\n<pre><code class=\"hljs language-js\">sh\ncd ios &#x26;&#x26; xcodegen generate\nflutter run --flavor <span class=\"hljs-title function_\">dev</span>(or prd)\n</code></pre>\n<h1>XcodeGen 파일 구조</h1>\n<p>XcodeGen과 관련된 파일 구조는 다음과 같습니다:</p>\n<pre><code class=\"hljs language-js\">ios\n├── project.<span class=\"hljs-property\">yml</span>\n└── xcodegen\n   ├── script\n   │ ├── check_pods_manifest.<span class=\"hljs-property\">sh</span>\n   │ ├── copy_pods_resources.<span class=\"hljs-property\">sh</span>\n   │ ├── crashlytics_upload_symbols.<span class=\"hljs-property\">sh</span>\n   │ ├── embed_pods_frameworks.<span class=\"hljs-property\">sh</span>\n   │ ├── run_script.<span class=\"hljs-property\">sh</span>\n   │ ├── select_google_service_info_plist.<span class=\"hljs-property\">sh</span>\n   │ └── thin_binary.<span class=\"hljs-property\">sh</span>\n   └── setting\n      ├── base.<span class=\"hljs-property\">yml</span>\n      ├── debug-dev.<span class=\"hljs-property\">yml</span>\n      ├── debug-prd.<span class=\"hljs-property\">yml</span>\n      ├── debug.<span class=\"hljs-property\">yml</span>\n      ├── profile-dev.<span class=\"hljs-property\">yml</span>\n      ├── profile-prd.<span class=\"hljs-property\">yml</span>\n      ├── profile.<span class=\"hljs-property\">yml</span>\n      ├── release-dev.<span class=\"hljs-property\">yml</span>\n      ├── release-prd.<span class=\"hljs-property\">yml</span>\n      └── release.<span class=\"hljs-property\">yml</span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>ios/xcodegen/script/ 디렉토리에서는 Xcode의 Build Phases 탭에 정의된 스크립트가 추출됩니다.</p>\n<pre><code class=\"hljs language-js\">#!<span class=\"hljs-regexp\">/bin/</span>sh\n\n/bin/sh <span class=\"hljs-string\">\"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\"</span> build\n</code></pre>\n<p><img src=\"/assets/img/2024-06-19-UseXcodeGenforFlutterProject_1.png\" alt=\"이미지\"></p>\n<p>ios/xcodegen/setting/ 디렉토리에는 각 구성에 대한 빌드 설정 탭 내용이 설명되어 있습니다. base.yml은 각 구성에 대한 값의 포함과 공통 설정의 설명을 처리합니다.</p>\n<div class=\"content-ad\"></div>\n<p>해당 main project.yml 파일의 전체 구조는 다음과 같습니다. 각 항목의 상세 설명은 공식 문서를 참조해주세요.</p>\n<pre><code class=\"hljs language-yaml\"><span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Runner</span>\n\n<span class=\"hljs-attr\">options:</span>\n  <span class=\"hljs-attr\">xcodeVersion:</span> <span class=\"hljs-string\">'15.4.0'</span>\n  <span class=\"hljs-attr\">developmentLanguage:</span> <span class=\"hljs-string\">ja</span>\n  <span class=\"hljs-attr\">deploymentTarget:</span>\n    <span class=\"hljs-attr\">iOS:</span> <span class=\"hljs-number\">16.0</span>\n\n<span class=\"hljs-attr\">include:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">xcodegen/setting/base.yml</span>\n\n<span class=\"hljs-attr\">configs:</span>\n  <span class=\"hljs-attr\">Debug:</span> <span class=\"hljs-string\">Debug</span>\n  <span class=\"hljs-attr\">Debug-dev:</span> <span class=\"hljs-string\">Debug-dev</span>\n  <span class=\"hljs-attr\">Debug-prd:</span> <span class=\"hljs-string\">Debug-prd</span>\n  <span class=\"hljs-attr\">Profile:</span> <span class=\"hljs-string\">Profile</span>\n  <span class=\"hljs-attr\">Profile-dev:</span> <span class=\"hljs-string\">Profile-dev</span>\n  <span class=\"hljs-attr\">Profile-prd:</span> <span class=\"hljs-string\">Profile-prd</span>\n  <span class=\"hljs-attr\">Release:</span> <span class=\"hljs-string\">Release</span>\n  <span class=\"hljs-attr\">Release-dev:</span> <span class=\"hljs-string\">Release-dev</span>\n  <span class=\"hljs-attr\">Release-prd:</span> <span class=\"hljs-string\">Release-prd</span>\n\n<span class=\"hljs-attr\">targets:</span>\n  <span class=\"hljs-attr\">Runner:</span>\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">application</span>\n    <span class=\"hljs-attr\">platform:</span> <span class=\"hljs-string\">iOS</span>\n    <span class=\"hljs-attr\">configFiles:</span>\n      <span class=\"hljs-attr\">Debug:</span> <span class=\"hljs-string\">Flutter/Debug.xcconfig</span>\n      <span class=\"hljs-attr\">Debug-dev:</span> <span class=\"hljs-string\">Flutter/Debug.xcconfig</span>\n      <span class=\"hljs-attr\">Debug-prd:</span> <span class=\"hljs-string\">Flutter/Debug.xcconfig</span>\n      <span class=\"hljs-attr\">Profile:</span> <span class=\"hljs-string\">Flutter/Profile.xcconfig</span>\n      <span class=\"hljs-attr\">Profile-dev:</span> <span class=\"hljs-string\">Flutter/Profile.xcconfig</span>\n      <span class=\"hljs-attr\">Profile-prd:</span> <span class=\"hljs-string\">Flutter/Profile.xcconfig</span>\n      <span class=\"hljs-attr\">Release:</span> <span class=\"hljs-string\">Flutter/Release.xcconfig</span>\n      <span class=\"hljs-attr\">Release-dev:</span> <span class=\"hljs-string\">Flutter/Release.xcconfig</span>\n      <span class=\"hljs-attr\">Release-prd:</span> <span class=\"hljs-string\">Flutter/Release.xcconfig</span>\n\n    <span class=\"hljs-attr\">sources:</span>\n      <span class=\"hljs-comment\"># - GoogleService-Info.plist</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Flutter/AppFrameworkInfo.plist</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Flutter/Generated.xcconfig</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Flutter/Debug.xcconfig</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Flutter/Profile.xcconfig</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">Flutter/Release.xcconfig</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">Runner/</span>\n\n    <span class=\"hljs-attr\">dependencies:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">sdk:</span> <span class=\"hljs-string\">Pods_Runner.framework</span>\n        <span class=\"hljs-attr\">embed:</span> <span class=\"hljs-literal\">false</span>\n        <span class=\"hljs-attr\">link:</span> <span class=\"hljs-literal\">true</span>\n\n    <span class=\"hljs-attr\">preBuildScripts:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'[CP] Check Pods Manifest.lock'</span>\n        <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">xcodegen/script/check_pods_manifest.sh</span>\n        <span class=\"hljs-attr\">inputFiles:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">${PODS_PODFILE_DIR_PATH}/Podfile.lock</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">${PODS_ROOT}/Manifest.lock</span>\n        <span class=\"hljs-attr\">outputFiles:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">$(DERIVED_FILE_DIR)/Pods-Runner-checkManifestLockResult.txt</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Run</span> <span class=\"hljs-string\">Script</span>\n        <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">xcodegen/script/run_script.sh</span>\n\n    <span class=\"hljs-comment\"># If you use different Firebase Project for each environment, you can use this script.</span>\n    <span class=\"hljs-comment\"># postCompileScripts:</span>\n    <span class=\"hljs-comment\">#   - name: Select GoogleService-Info.plist</span>\n    <span class=\"hljs-comment\">#     path: xcodegen/script/select_google_service_info_plist.sh</span>\n    <span class=\"hljs-comment\">#     outputFiles:</span>\n    <span class=\"hljs-comment\">#       - ${SRCROOT}/GoogleService-Info.plist</span>\n\n    <span class=\"hljs-attr\">postBuildScripts:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">Thin</span> <span class=\"hljs-string\">Binary</span>\n        <span class=\"hljs-attr\">path:</span> <span class=\"hljs-string\">xcodegen/script/thin_binary.sh</span>\n        <span class=\"hljs-attr\">inputFiles:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">${TARGET_BUILD_DIR}/${INFOPLIST_PATH}</span>\n\n      <span class=\"hljs-comment\"># If you use Firebase Crashlytics, you can use this script.</span>\n      <span class=\"hljs-comment\"># - name: '[firebase_crashlytics] Crashlytics Upload Symbols'</span>\n      <span class=\"hljs-comment\">#   path: xcodegen/script/crashlytics_upload_symbols.sh</span>\n      <span class=\"hljs-comment\">#   inputFiles:</span>\n      <span class=\"hljs-comment\">#     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}</span>\n      <span class=\"hljs-comment\">#     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Resources/DWARF/${PRODUCT_NAME}</span>\n      <span class=\"hljs-comment\">#     - ${DWARF_DSYM_FOLDER_PATH}/${DWARF_DSYM_FILE_NAME}/Contents/Info.plist</span>\n      <span class=\"hljs-comment\">#     - $(TARGET_BUILD_DIR)/$(UNLOCALIZED_RESOURCES_FOLDER_PATH)/GoogleService-Info.plist</span>\n      <span class=\"hljs-comment\">#     - $(TARGET_BUILD_DIR)/$(EXECUTABLE_PATH)</span>\n\n\n    <span class=\"hljs-attr\">settings:</span>\n      <span class=\"hljs-attr\">base:</span>\n        <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS:</span> <span class=\"hljs-literal\">NO</span>\n        <span class=\"hljs-attr\">CLANG_ENABLE_MODULES:</span> <span class=\"hljs-literal\">YES</span>\n        <span class=\"hljs-attr\">CURRENT_PROJECT_VERSION:</span> <span class=\"hljs-string\">'$(FLUTTER_BUILD_NUMBER)'</span>\n        <span class=\"hljs-comment\"># <span class=\"hljs-doctag\">TODO:</span> DEVELOPMENT_TEAM</span>\n        <span class=\"hljs-comment\"># DEVELOPMENT_TEAM: YOUR_TEAM_ID</span>\n        <span class=\"hljs-attr\">ENABLE_BITCODE:</span> <span class=\"hljs-literal\">NO</span>\n        <span class=\"hljs-attr\">INFOPLIST_FILE:</span> <span class=\"hljs-string\">Runner/Info.plist</span>\n        <span class=\"hljs-attr\">SWIFT_OBJC_BRIDGING_HEADER:</span> <span class=\"hljs-string\">'Runner/Runner-Bridging-Header.h'</span>\n        <span class=\"hljs-attr\">SWIFT_VERSION:</span> <span class=\"hljs-number\">5.0</span>\n        <span class=\"hljs-attr\">VERSIONING_SYSTEM:</span> <span class=\"hljs-string\">'apple-generic'</span>\n      <span class=\"hljs-attr\">configs:</span>\n        <span class=\"hljs-attr\">Profile-prd:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-prd'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'PRD'</span>\n\n        <span class=\"hljs-attr\">Profile-dev:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-dev'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample.dev</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'DEV'</span>\n\n        <span class=\"hljs-attr\">Release-prd:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-prd'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'PRD'</span>\n\n        <span class=\"hljs-attr\">Release-dev:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-dev'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample.dev</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'DEV'</span>\n\n        <span class=\"hljs-attr\">Debug-prd:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-prd'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'PRD'</span>\n          <span class=\"hljs-attr\">SWIFT_OPTIMIZATION_LEVEL:</span> <span class=\"hljs-string\">'-Onone'</span>\n\n        <span class=\"hljs-attr\">Debug-dev:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-dev'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample.dev</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'DEV'</span>\n          <span class=\"hljs-attr\">SWIFT_OPTIMIZATION_LEVEL:</span> <span class=\"hljs-string\">'-Onone'</span>\n\n        <span class=\"hljs-attr\">Debug:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-prd'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'NONE'</span>\n          <span class=\"hljs-attr\">SWIFT_OPTIMIZATION_LEVEL:</span> <span class=\"hljs-string\">'-Onone'</span>\n\n        <span class=\"hljs-attr\">Release:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-prd'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'NONE'</span>\n\n        <span class=\"hljs-attr\">Profile:</span>\n          <span class=\"hljs-attr\">ASSETCATALOG_COMPILER_APPICON_NAME:</span> <span class=\"hljs-string\">'AppIcon-prd'</span>\n          <span class=\"hljs-attr\">PRODUCT_BUNDLE_IDENTIFIER:</span> <span class=\"hljs-string\">com.example.flutterXcodegenSample</span>\n          <span class=\"hljs-attr\">PRODUCT_NAME:</span> <span class=\"hljs-string\">'NONE'</span>\n\n\n<span class=\"hljs-attr\">schemes:</span>\n  <span class=\"hljs-attr\">Runner:</span>\n    <span class=\"hljs-attr\">build:</span>\n      <span class=\"hljs-attr\">targets:</span>\n        <span class=\"hljs-attr\">Runner:</span> <span class=\"hljs-string\">all</span>\n    <span class=\"hljs-attr\">run:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug</span>\n    <span class=\"hljs-attr\">test:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug</span>\n    <span class=\"hljs-attr\">profile:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Profile</span>\n    <span class=\"hljs-attr\">analyze:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug</span>\n    <span class=\"hljs-attr\">archive:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Release</span>\n  <span class=\"hljs-attr\">dev:</span>\n    <span class=\"hljs-attr\">build:</span>\n      <span class=\"hljs-attr\">targets:</span>\n        <span class=\"hljs-attr\">Runner:</span> <span class=\"hljs-string\">all</span>\n    <span class=\"hljs-attr\">run:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug-dev</span>\n    <span class=\"hljs-attr\">test:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug-dev</span>\n    <span class=\"hljs-attr\">profile:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Profile-dev</span>\n    <span class=\"hljs-attr\">analyze:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug-dev</span>\n    <span class=\"hljs-attr\">archive:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Release-dev</span>\n  <span class=\"hljs-attr\">prd:</span>\n    <span class=\"hljs-attr\">build:</span>\n      <span class=\"hljs-attr\">targets:</span>\n        <span class=\"hljs-attr\">Runner:</span> <span class=\"hljs-string\">all</span>\n    <span class=\"hljs-attr\">run:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug-prd</span>\n    <span class=\"hljs-attr\">test:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug-prd</span>\n    <span class=\"hljs-attr\">profile:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Profile-prd</span>\n    <span class=\"hljs-attr\">analyze:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Debug-prd</span>\n    <span class=\"hljs-attr\">archive:</span>\n      <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">Release-prd</span>\n</code></pre>\n<div class=\"content-ad\"></div>\n<p>파이어베이스 프로젝트 설정을 완료한 후, 각 flavor에 사용하려는 GoogleService-Info.plist를 ios/GoogleService/'Flavor' 아래에 배치하세요. 또한, 빌드 중에 각 flavor용 GoogleService-Info.plist를 ios/로 복사하는 스크립트를 실행해야 합니다. 이 설정들은 주석 처리되어 있으므로 필요에 따라 주석을 해제해주세요.</p>\n<pre><code class=\"hljs language-js\"># 각 환경에 별도의 <span class=\"hljs-title class_\">Firebase</span> 프로젝트를 사용하는 경우, 다음 스크립트를 사용할 수 있습니다.\n# <span class=\"hljs-attr\">postCompileScripts</span>:\n#   - <span class=\"hljs-attr\">name</span>: <span class=\"hljs-title class_\">Select</span> <span class=\"hljs-title class_\">GoogleService</span>-<span class=\"hljs-title class_\">Info</span>.<span class=\"hljs-property\">plist</span>\n#     <span class=\"hljs-attr\">path</span>: xcodegen/script/select_google_service_info_plist.<span class=\"hljs-property\">sh</span>\n#     <span class=\"hljs-attr\">outputFiles</span>:\n#       - ${<span class=\"hljs-variable constant_\">SRCROOT</span>}/<span class=\"hljs-title class_\">GoogleService</span>-<span class=\"hljs-title class_\">Info</span>.<span class=\"hljs-property\">plist</span>\n## <span class=\"hljs-title class_\">Firebase</span> <span class=\"hljs-title class_\">Crashlytics</span>를 사용할 때\n</code></pre>\n<p>콘솔 로그를 더 가독성 있게 만들기 위해, postBuildPhase에 dSYM을 업로드해야 합니다. 이 또한 주석 처리되어 있으니 필요에 따라 주석을 해제해주세요.</p>\n<pre><code class=\"hljs language-js\"># <span class=\"hljs-title class_\">Firebase</span> <span class=\"hljs-title class_\">Crashlytics</span>를 사용한다면, 다음 스크립트를 사용할 수 있습니다.\n# - <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'[firebase_crashlytics] Crashlytics Upload Symbols'</span>\n#   <span class=\"hljs-attr\">path</span>: xcodegen/script/crashlytics_upload_symbols.<span class=\"hljs-property\">sh</span>\n#   <span class=\"hljs-attr\">inputFiles</span>:\n#     - ${<span class=\"hljs-variable constant_\">DWARF_DSYM_FOLDER_PATH</span>}/${<span class=\"hljs-variable constant_\">DWARF_DSYM_FILE_NAME</span>}\n#     - ${<span class=\"hljs-variable constant_\">DWARF_DSYM_FOLDER_PATH</span>}/${<span class=\"hljs-variable constant_\">DWARF_DSYM_FILE_NAME</span>}/<span class=\"hljs-title class_\">Contents</span>/<span class=\"hljs-title class_\">Resources</span>/<span class=\"hljs-variable constant_\">DWARF</span>/${<span class=\"hljs-variable constant_\">PRODUCT_NAME</span>}\n#     - ${<span class=\"hljs-variable constant_\">DWARF_DSYM_FOLDER_PATH</span>}/${<span class=\"hljs-variable constant_\">DWARF_DSYM_FILE_NAME</span>}/<span class=\"hljs-title class_\">Contents</span>/<span class=\"hljs-title class_\">Info</span>.<span class=\"hljs-property\">plist</span>\n#     - $(<span class=\"hljs-variable constant_\">TARGET_BUILD_DIR</span>)/$(<span class=\"hljs-variable constant_\">UNLOCALIZED_RESOURCES_FOLDER_PATH</span>)/<span class=\"hljs-title class_\">GoogleService</span>-<span class=\"hljs-title class_\">Info</span>.<span class=\"hljs-property\">plist</span>\n#     - $(<span class=\"hljs-variable constant_\">TARGET_BUILD_DIR</span>)/$(<span class=\"hljs-variable constant_\">EXECUTABLE_PATH</span>)\n</code></pre>\n<div class=\"content-ad\"></div>\n<h1>결론</h1>\n<p>처음에 XcodeGen을 이해하는 것은 어려울 수 있지만, 이 문서가 도움이 되기를 바랍니다! 모든 지침에 대해 cokaholic🐰🍁☄️🪐에게 특별히 감사드립니다!</p>\n</body>\n</html>\n"},"__N_SSG":true}