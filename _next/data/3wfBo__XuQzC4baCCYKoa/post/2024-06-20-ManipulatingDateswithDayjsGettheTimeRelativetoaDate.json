{"pageProps":{"post":{"title":"날짜 조작하기 Dayjs로 날짜에 상대적인 시간 가져오기","description":"","date":"2024-06-20 14:06","slug":"2024-06-20-ManipulatingDateswithDayjsGettheTimeRelativetoaDate","content":"\n\n\n![Day.js로 날짜 조작하기](/assets/img/2024-06-20-ManipulatingDateswithDayjsGettheTimeRelativetoaDate_0.png)\n\nDay.js는 앱에서 날짜를 조작할 수 있게 해주는 JavaScript 라이브러리입니다.\n\n이 글에서는 JavaScript 앱에서 Day.js를 사용하여 날짜를 조작하는 방법을 살펴보겠습니다.\n\n# 현재까지의 시간 구하기\n\n\n<div class=\"content-ad\"></div>\n\n상대시간 플러그인과 함께 사용할 수 있는 toNow 메서드를 사용하여 현재까지의 상대 시간 문자열을 얻을 수 있습니다.\n\n예를 들어 다음과 같이 작성할 수 있습니다:\n\n```js\nconst dayjs = require(\"dayjs\");\nconst relativeTime = require(\"dayjs/plugin/relativeTime\");\ndayjs.extend(relativeTime);\nconst result = dayjs(\"1999-01-01\").toNow();\nconsole.log(result);\n```\n\n1999년 1월 1일부터 현재까지 얼마나 시간이 지났는지 확인할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n따라서, 2021년에 '23년 후'라는 결과가 나옵니다.\n\n또한, toNow에 true를 전달하여 접미사를 제거할 수 있습니다.\n\n그리고 결과로 `23년`을 얻을 수 있습니다.\n\n# 주어진 시간까지 남은 시간 가져오기\n\n<div class=\"content-ad\"></div>\n\n\"relativeTime\" 플러그인을 사용할 수 있는 \"to\" 메서드로 현재로부터 상대적인 시간의 문자열을 얻을 수 있습니다.\n\n예를 들어, 다음과 같이 작성할 수 있습니다:\n\n```js\nconst dayjs = require(\"dayjs\");\nconst relativeTime = require(\"dayjs/plugin/relativeTime\");\ndayjs.extend(relativeTime);\nconst a = dayjs(\"2020-01-01\");\nconst result = dayjs(\"1999-01-01\").to(a);\nconsole.log(result);\n```\n\n1999년 1월 1일부터 2020년 1월 1일까지 얼마나 오랜 시간이 걸렸는지 확인할 수 있습니다.\n\n<div class=\"content-ad\"></div>\n\n그러므로 결과는 `in 21 years‘입니다.\n\n또한 두 번째 인수로 true를 전달하여 접미사를 제거할 수 있습니다.\n\n결과로는 `21 years`를 얻을 수 있습니다.\n\n# 결론\n\n<div class=\"content-ad\"></div>\n\nDay.js는 우리 앱에서 날짜를 조작할 수 있게 해주는 JavaScript 라이브러리입니다.\n\n# 쉽게 이해하기 🚀\n\nIn Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:\n\n- 작성자를 클랩하고 팔로우하세요 ️👏️️\n- 팔로우하기: X | LinkedIn | YouTube | Discord | Newsletter\n- 다른 플랫폼에서도 만나보세요: CoFeed | Differ\n- PlainEnglish.io에서 더 많은 콘텐츠를 만나보세요.","ogImage":{"url":"/assets/img/2024-06-20-ManipulatingDateswithDayjsGettheTimeRelativetoaDate_0.png"},"coverImage":"/assets/img/2024-06-20-ManipulatingDateswithDayjsGettheTimeRelativetoaDate_0.png","tag":["Tech"],"readingTime":2},"content":"<!doctype html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<meta content=\"width=device-width, initial-scale=1\" name=\"viewport\">\n</head>\n<body>\n<p><img src=\"/assets/img/2024-06-20-ManipulatingDateswithDayjsGettheTimeRelativetoaDate_0.png\" alt=\"Day.js로 날짜 조작하기\"></p>\n<p>Day.js는 앱에서 날짜를 조작할 수 있게 해주는 JavaScript 라이브러리입니다.</p>\n<p>이 글에서는 JavaScript 앱에서 Day.js를 사용하여 날짜를 조작하는 방법을 살펴보겠습니다.</p>\n<h1>현재까지의 시간 구하기</h1>\n<p>상대시간 플러그인과 함께 사용할 수 있는 toNow 메서드를 사용하여 현재까지의 상대 시간 문자열을 얻을 수 있습니다.</p>\n<p>예를 들어 다음과 같이 작성할 수 있습니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> dayjs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"dayjs\"</span>);\n<span class=\"hljs-keyword\">const</span> relativeTime = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"dayjs/plugin/relativeTime\"</span>);\ndayjs.<span class=\"hljs-title function_\">extend</span>(relativeTime);\n<span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-title function_\">dayjs</span>(<span class=\"hljs-string\">\"1999-01-01\"</span>).<span class=\"hljs-title function_\">toNow</span>();\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n</code></pre>\n<p>1999년 1월 1일부터 현재까지 얼마나 시간이 지났는지 확인할 수 있습니다.</p>\n<p>따라서, 2021년에 '23년 후'라는 결과가 나옵니다.</p>\n<p>또한, toNow에 true를 전달하여 접미사를 제거할 수 있습니다.</p>\n<p>그리고 결과로 <code>23년</code>을 얻을 수 있습니다.</p>\n<h1>주어진 시간까지 남은 시간 가져오기</h1>\n<p>\"relativeTime\" 플러그인을 사용할 수 있는 \"to\" 메서드로 현재로부터 상대적인 시간의 문자열을 얻을 수 있습니다.</p>\n<p>예를 들어, 다음과 같이 작성할 수 있습니다:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-keyword\">const</span> dayjs = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"dayjs\"</span>);\n<span class=\"hljs-keyword\">const</span> relativeTime = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">\"dayjs/plugin/relativeTime\"</span>);\ndayjs.<span class=\"hljs-title function_\">extend</span>(relativeTime);\n<span class=\"hljs-keyword\">const</span> a = <span class=\"hljs-title function_\">dayjs</span>(<span class=\"hljs-string\">\"2020-01-01\"</span>);\n<span class=\"hljs-keyword\">const</span> result = <span class=\"hljs-title function_\">dayjs</span>(<span class=\"hljs-string\">\"1999-01-01\"</span>).<span class=\"hljs-title function_\">to</span>(a);\n<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(result);\n</code></pre>\n<p>1999년 1월 1일부터 2020년 1월 1일까지 얼마나 오랜 시간이 걸렸는지 확인할 수 있습니다.</p>\n<p>그러므로 결과는 `in 21 years‘입니다.</p>\n<p>또한 두 번째 인수로 true를 전달하여 접미사를 제거할 수 있습니다.</p>\n<p>결과로는 <code>21 years</code>를 얻을 수 있습니다.</p>\n<h1>결론</h1>\n<p>Day.js는 우리 앱에서 날짜를 조작할 수 있게 해주는 JavaScript 라이브러리입니다.</p>\n<h1>쉽게 이해하기 🚀</h1>\n<p>In Plain English 커뮤니티에 참여해 주셔서 감사합니다! 떠나시기 전에:</p>\n<ul>\n<li>작성자를 클랩하고 팔로우하세요 ️👏️️</li>\n<li>팔로우하기: X | LinkedIn | YouTube | Discord | Newsletter</li>\n<li>다른 플랫폼에서도 만나보세요: CoFeed | Differ</li>\n<li>PlainEnglish.io에서 더 많은 콘텐츠를 만나보세요.</li>\n</ul>\n</body>\n</html>\n"},"__N_SSG":true}